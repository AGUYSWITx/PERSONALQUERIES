CREATE OR ALTER PROC [dbo].[WSP_DEPRECIATION_CALCULATOR]
	--DECLARE
	@CURRENTMONTH INT,
	@PHISCALYEAR VARCHAR(25),
	@CONFIGMODE TINYINT -- 1 FOR COMPANY NORMS; 2 FOR TAX
AS
--select @CURRENTMONTH=1,@PHISCALYEAR='80/81',@CONFIGMODE='1'
DECLARE @DEPRECIATION_METHOD TINYINT,
	--1 FOR STRAIGHT;2 FOR WDV
	@SALVAGEVALUE NUMERIC(18, 2),
	--CAN'T BE LESS THAN THIS
	@MinDepValue NUMERIC(18, 2),
	--FILTER OUT LESS THAN
	@CALCULATION_INTV TINYINT,
	-- 1 FOR MONTHLY;2 FOR YEARLY
	@DEPFROM TINYINT,
	-- 3 FOR NEXT MONTH ; 2 FOR NEXT DAY OF PURCHASE ;1 FOR DAY OF PURCHASE
	@ENABLELBD TINYINT,
	-- 1 ENABLED; O DISABLED ;LIFE BASED DEP
	@ACTIVATIONDATE TINYINT,
	-- 1 ENABLED; O DISABLED; BASED ON ACTIVATION DATE  
	@beginDATE VARCHAR(25)

--SELECT * FROM ASSET_SETTING WHERE ASID=@CONFIGMODE
SELECT @DEPRECIATION_METHOD = DepreciationMethod,
	@SALVAGEVALUE = SalvageValue,
	@MinDepValue = MinDepValue,
	@CALCULATION_INTV = CalculationInterval,
	@DEPFROM = DepFrom,
	@ENABLELBD = EnableLBD,
	@ACTIVATIONDATE = CalDepBasedOnActivationDate
FROM ASSET_SETTING
WHERE ASID = @CONFIGMODE

/* 
SELECT 
@DEPRECIATION_METHOD ,
@SALVAGEVALUE  ,
@MinDepValue  ,
@CALCULATION_INTV  ,
@DEPFROM   , 
@ENABLELBD  ,  
@ACTIVATIONDATE    

*/
IF @CALCULATION_INTV = 2
	SET @CURRENTMONTH = 12

--MONTH CALCULATION   
IF OBJECT_ID('TEMPDB..#DATA') IS NOT NULL
	DROP TABLE #DATA

SELECT AM.AssetID,
	AM.MCODE,
	AM.BATCHCODE,
	AM.ACID,
	AD.BOOKVALUE,
	BM.COSTPRICE,
	AG.DEPRECIATIONRATE,
	IIF(@DEPRECIATION_METHOD = 1, AD.BOOKVALUE, AD.BOOKVALUE - ISNULL(DP.DEPRECIATION_VALUE, 0)) CHECK1,
	AD.MON,
	AD.BOOKVALUE - ISNULL(DP.DEPRECIATION_VALUE, 0) DPBOOKVALUE,
	DBO.Fn_CalculateDepreciation(IIF(@DEPRECIATION_METHOD = 1, IIF(AD.MON = 0, BM.COSTPRICE, AD.BOOKVALUE), AD.BOOKVALUE - ISNULL(DP.DEPRECIATION_VALUE, 0)), DEPRECIATIONRATE, @CALCULATION_INTV, @CONFIGMODE, ISNULL(D.Percentage, 0)) DEPRECIATION_VALUE,
	D.[PERCENTAGE] YPERCENTAGE
INTO #DATA
FROM ASSETCODE_MASTER AM
JOIN ASSETCODE_DETAIL AD ON AM.AssetID = AD.AssetID
	AND AM.MCODE = AD.MCODE
	AND AM.BATCHCODE = AD.BATCHCODE
LEFT JOIN ASSET_GROUP_LEDGER AGL ON AM.ACID = AGL.ACID
LEFT JOIN ASSET_GROUP AG ON AG.AssetGroupID = AGL.AssetGroupID
LEFT JOIN (
	SELECT SUM(DEPRECIATION_VALUE) DEPRECIATION_VALUE,
		AssetID,
		MCODE,
		BATCHCODE,
		PhiscalID
	FROM DEPRECIATION
	WHERE PhiscalID = @PHISCALYEAR
		AND @CALCULATION_INTV = 1
	GROUP BY AssetID,
		MCODE,
		BATCHCODE,
		PhiscalID
	) DP ON AM.AssetID = DP.AssetID
	AND AM.MCODE = DP.MCODE
	AND AM.BATCHCODE = DP.BATCHCODE
LEFT JOIN ASSET_DEP_CONFIGURATION D ON AD.MON BETWEEN MONTHFROM
		AND MONTHTO
	AND D.ASID = @CONFIGMODE
	AND @CALCULATION_INTV = 2
LEFT JOIN BATCHPRICE_MASTER_ASSET BM ON BM.BATCHCODE = AM.BATCHCODE
	AND BM.MCODE = AM.MCODE
WHERE AD.PhiscalID = @PHISCALYEAR
	AND BM.COSTPRICE > @MinDepValue AND
	AM.STATUS=1
IF OBJECT_ID('TEMPDB..#FINALDATA') IS NOT NULL
	DROP TABLE #FINALDATA

SELECT AssetID,
	A.MCODE,
	AMI.MENUCODE,
	BATCHCODE,
	IIF((DPBOOKVALUE - DEPRECIATION_VALUE) > @SALVAGEVALUE, (DPBOOKVALUE - DEPRECIATION_VALUE), @SALVAGEVALUE) AS BOOKVALUE,
	COSTPRICE ORIGNALCOST,
	IIF((DPBOOKVALUE - DEPRECIATION_VALUE) > @SALVAGEVALUE, DEPRECIATION_VALUE, DPBOOKVALUE - @SALVAGEVALUE) DEPRECIATION,
	@CURRENTMONTH [MONTHS],
	@PHISCALYEAR PHISCALID,
	A.ACID,
	RA.ACNAME,
	AMI.DESCA ITEMNAME,
	DEPRECIATIONRATE,
	DPBOOKVALUE
INTO #FINALDATA
FROM #DATA A
JOIN RMD_ACLIST RA ON RA.acid = a.acid
JOIN ASSET_MENUITEM AMI ON AMI.MCODE = A.MCODE
WHERE MON <= @CURRENTMONTH

--ASSETCODE WISE
SELECT ROW_NUMBER() OVER (
		ORDER BY ITEMNAME
		) SN,
	ACID,
	ACNAME [Account_Heading],
	ASSETID ASSETCODE,
	MENUCODE,
	ITEMNAME,
	BATCHCODE,
	MCODE,
	DEPRECIATIONRATE [Depreciation_Rate],
	convert(NUMERIC(32, 2), Orignalcost) [Cost_Value],
	convert(NUMERIC(32, 2), DPBOOKVALUE) [Current_Book_Value],
	convert(NUMERIC(32, 2), Depreciation) Depreciation,
	convert(NUMERIC(32, 2), BOOKVALUE) [Net_Book_Value]
FROM #FINALDATA

--ITEM WISE
SELECT ROW_NUMBER() OVER (
		ORDER BY MCODE
		) SN,
	ACID,
	ACNAME [Account_Heading],
	ITEMNAME,
	MCODE,
	MENUCODE,
	DEPRECIATIONRATE [Depreciation_Rate],
	SUM(convert(NUMERIC(32, 2), Orignalcost)) [Cost_Value],
	SUM(convert(NUMERIC(32, 2), DPBOOKVALUE)) [Current_Book_Value],
	SUM(convert(NUMERIC(32, 2), Depreciation)) [Depreciation],
	SUM(convert(NUMERIC(32, 2), BOOKVALUE)) [Net_Book_Value],
	COUNT(AssetID) Quantity 
FROM #FINALDATA
GROUP BY MCODE,
	ACID,
	ACNAME,
	DEPRECIATIONRATE,
	ITEMNAME,
	MENUCODE

--HEADINGWISE
SELECT ROW_NUMBER() OVER (
		ORDER BY ACNAME
		) SN,
	ACID,
	ACNAME [Account_Heading],
	DEPRECIATIONRATE [Depreciation_Rate],
	sum(convert(NUMERIC(32, 2), Orignalcost)) [Cost_Value],
	sum(convert(NUMERIC(32, 2), DPBOOKVALUE)) [Current_Book_Value],
	sum(convert(NUMERIC(32, 2), Depreciation)) Depreciation,
	sum(convert(NUMERIC(32, 2), BOOKVALUE)) [Net_Book_Value]
FROM #FINALDATA
GROUP BY ACID,
	acname,
	DEPRECIATIONRATE