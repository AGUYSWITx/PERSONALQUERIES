 
 
CREATE OR ALTER     PROCEDURE [dbo].[WSP_MONTHLY_SALESREPORT_SSI_SBL]
	 --DECLARE
	@DATE1 DATETIME,
	@DATE2 DATETIME,
	@SALESMANID NVARCHAR(MAX)='%',
	@CUSTOMERACID NVARCHAR(MAX)='%',
  	@INCLUDE_CN TINYINT = 0 ----->>--FOR FILTERING SALES RETURN

	AS

--select @DATE1=N'2023-07-17',@DATE2=N'2023-09-04',@SALESMANID=N'101',@CUSTOMERACID=N'%',@INCLUDE_CN=N'0'
	-- SELECT @DATE1='2022-05-01',@DATE2='2023-06-28',@SALESMANID='%',@CUSTOMERACID = '%',@SL = 0
	DECLARE @DynamicSQL NVARCHAR(MAX);
	DECLARE @Columns NVARCHAR(MAX);
	DECLARE @ColumnsSUM NVARCHAR(MAX);
  	DECLARE @v1 VARCHAR(10)='TI';
  	DECLARE @v2 VARCHAR(10) = 'SI';
  	DECLARE @v3 VARCHAR(10) = IIF(@INCLUDE_CN=1,'CN','~'); ------->>------IF SALES RETURN REQUIRED OR NOT IN THE REPORT
  	DECLARE @v4 VARCHAR(10) = 'RE';
  	DECLARE @v5 VARCHAR(10) = IIF(@INCLUDE_CN=1,'RR','~'); ----->>----- IF SALES RETURN REQUIRED OR NOT IN THE REPORT

	
  	IF OBJECT_ID('TEMPDB..#DATA') is not null drop table #DATA
	
  	IF OBJECT_ID('TEMPDB..#DATA2') is not null drop table #DATA2

		select   SSM.NAME AGENT, RA.ACNAME CUSTOMER, RA.salesmanid,TP.MCODE,ISNULL(NULLIF(B.mcat1,''),'N/A') MCAT1 ,TR.trnac ACID,IIF(TR.VoucherType IN (@V1,@V2,@V5),TP.NETAMOUNT,TP.NETAMOUNT * -1) NETAMOUNT,
  	SUM (IIF(TR.VoucherType IN (@V1,@V2,@V5),TP.NETAMOUNT,TP.NETAMOUNT * -1))  OVER (PARTITION BY TR.SALESMANID,TR.TRNAC ORDER BY TR.SALESMANID) GRANDTOTAL 
  	INTO #DATA from RMD_TRNPROD TP with (nolock) join menuitem b with (nolock) on TP.mcode=B.mcode
		JOIN TRNMAIN TR with (nolock) on TR.VCHRNO=TP.VCHRNO 
		LEFT JOIN RMD_ACLIST  RA with (nolock)  ON RA.ACID= TR.TRNAC
		LEFT JOIN SALESMAN SSM with (nolock) ON SSM.SALESMANID= RA.SALESMANID
		WHERE TR.TRNDATE BETWEEN @DATE1 AND @DATE2
		 AND	(@SALESMANID = '%' OR ( @SALESMANID <> '%' AND SSM.SALESMANID  IN (SELECT * FROM DBO.SPLIT(@SALESMANID,',')))) 
		 AND	(@CUSTOMERACID = '%' OR ( @CUSTOMERACID <> '%' AND TR.TRNAC  IN (SELECT * FROM DBO.SPLIT(@CUSTOMERACID,','))))
  	 AND  TR.VoucherType IN (@V1,@V2,@V3,@V4,@V5)------------>>-----CONDITION TO FILTER VOUCHER TYPE


	
-- Generate the column names dynamically based on distinct values of mcat1
	SET @Columns = NULL
	SET @Columns = STUFF(
		(
			SELECT ', ' + QUOTENAME(mcat1) AS [text()]
			FROM (SELECT DISTINCT MCAT1 MCAT1 FROM #DATA)A 
			ORDER BY MCAT1
        
			FOR XML PATH('')   
		)  ,1, 2, ''
	);
 
	 SET @ColumnsSUM = STUFF(
		(
			SELECT   ', SUM('  + QUOTENAME(mcat1) +')  AS '+ QUOTENAME(mcat1)   
					FROM (SELECT DISTINCT MCAT1 MCAT1 FROM #DATA)A 
			ORDER BY MCAT1
			FOR XML PATH('')   
		)  ,1, 2, ''
	); 
 
 
	-- Build the dynamic SQL statement
	SET @DynamicSQL = '
	SELECT * INTO #DATA2
	FROM (
		SELECT AGENT,SALESMANID,CUSTOMER,NETAMOUNT, mcat1,GRANDTOTAL
		FROM #DATA
	) AS Source
	PIVOT (
		SUM(NETAMOUNT)
		FOR mcat1 IN (' + @Columns + ')
	) AS PivotTable


	 SELECT  *,count(*) OVER() as ALLCOUNT FROM (
	SELECT *,''A''FLG,''R''FFLG FROM #DATA2
	UNION ALL

	SELECT   AGENT	,   salesmanid , ''TOTAL>>''	CUSTOMER	,    SUM(GRANDTOTAL) AS SUMGRAND , '+@ColumnsSUM+' , ''B''FLG,''B''FFLG  FROM #DATA2 GROUP BY SALESMANID,AGENT
	)SUMM
	ORDER BY ISNULL(AGENT,''ZZZZZZZZ''),salesmanid ,FLG
	';

 
	-- Execute the dynamic SQL
	EXEC(@DynamicSQL);
