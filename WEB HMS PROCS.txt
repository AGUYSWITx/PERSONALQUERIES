 

/****** Object:  StoredProcedure [dbo].[WSP_StockSettlement]    Script Date: 06/27/2023 6:33:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 

create or  alter     PROCEDURE [dbo].[WSP_StockSettlement] 
--DECLARE
	@DATE1 DATE,
	@DATE2 DATE,
	@DIVISION VARCHAR(3)= '%',
	@FYID VARCHAR(10) = '%'
AS
--SELECT  @DATE1=N'2023-03-01',@DATE2=N'2023-06-22',@DIVISION=N'PKR',@FYID=N'79/80'


DECLARE @COLQTY NVARCHAR(MAX)
 SET @colQty = STUFF((SELECT distinct ',' + QUOTENAME(TRNMODE ) +' varchar (max),'+ QUOTENAME(TRNMODE+' Value' ) +' varchar(max)'
            FROM INVMAIN WHERE VOUCHERTYPE = 'DM' FOR XML PATH(''), TYPE  ).value('.', 'NVARCHAR(MAX)')  ,1,1,'') 
 
		 
DECLARE @QUERY NVARCHAR(MAX)

set @QUERY='DECLARE @RESULT TABLE(MENUCODE VARCHAR(100),	DESCA VARCHAR(MAX), 	BASEUNIT VARCHAR(100) ,	Opening	VARCHAR(200) ,Purchase		VARCHAR(200) ,[Transfer In]	VARCHAR(200) ,	[Transfer Out]	VARCHAR(200) ,	[MCODE] 	VARCHAR(200) ,' + @COLQTY +
', SETTLEMENTVALUE	 VARCHAR(200) ,SALESCOST  VARCHAR(200) ,	STOCKADJUSTMENTVALUE VARCHAR(200) ,	STOCKBALANCE VARCHAR(200) ,	STOCKVALUE VARCHAR(200)) 

INSERT INTO @RESULT
EXEC RSP_StockSettlement @DATE1=' + ''''+FORMAT (@DATE1,'yyyy/MM/dd') + ''''+', @DATE2= ' + ''''+FORMAT (@DATE2,'yyyy/MM/dd') + ''''+ ', @DIVISION='+ ''''+@DIVISION + ''''+',@FYID='+ ''''+@FYID+ ''''+'
SELECT * ,COUNT(*) OVER() ALLCOUNT FROM @RESULT 
'

 --SELECT @QUERY
 EXEC SP_EXECUTESQL @QUERY;
  
GO

/****** Object:  StoredProcedure [dbo].[WSP_KOT_VS_PREBILL_VS_SALES_DETAIL]    Script Date: 06/27/2023 6:33:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


create or  alter   PROCEDURE [dbo].[WSP_KOT_VS_PREBILL_VS_SALES_DETAIL]
--DECLARE
	@DATE1 DATETIME,
	@DATE2 DATETIME
AS

--select @DATE1='2022-12-01 00:00:00',@DATE2='2023-06-22 00:00:00'
DECLARE @RESULT TABLE (SNO VARCHAR(300),	TRNDATE	 DATETIME, KOTID	 VARCHAR(300),TABLENO	 VARCHAR(300),[ITEM CODE]	 VARCHAR(300),[ITEM NAME] VARCHAR(300),	[ORDER QTY]  VARCHAR(300),	[CANCEL QTY]  VARCHAR(300),	PREBILL1	 VARCHAR(300),PREBILL2	 VARCHAR(300),PREBILL3	 VARCHAR(300),[BILL NO] VARCHAR(300),	NETAMOUNT  VARCHAR(300))
 
 INSERT INTO @RESULT
 exec RSP_KOT_VS_PREBILL_VS_SALES_DETAIL @DATE1=@DATE1,@DATE2=@DATE2


 SELECT FORMAT (TRNDATE,'dd/MM/yyyy')Date, *,COUNT(*) OVER() ALLCOUNT FROM @RESULT
GO

/****** Object:  StoredProcedure [dbo].[WSP_STOCKSETTLEMNTSTATUS]    Script Date: 06/27/2023 6:33:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

create or  alter     PROCEDURE  [dbo].[WSP_STOCKSETTLEMNTSTATUS]
--DECLARE
	@DATE1 DATETIME,
	@DATE2 DATETIME,
	@SETTLEMENTMODE VARCHAR(25) = '%',
	@DIVISION VARCHAR(15) = '%',
	@WAREHOUSE VARCHAR(25) = '%',
	@MGROUP VARCHAR(25)='%',
	@FYID VARCHAR(10) = ''
AS 

DECLARE @RESULT TABLE (MENUCODE	 VARCHAR(300),DESCA	VARCHAR(1000),BASEUNIT	VARCHAR(300),OPQTY	NUMERIC(32,2),REALQTY_IN	NUMERIC(32,2),REALQTY		NUMERIC(32,2),NETQTY		NUMERIC(32,2),PRATE_A NUMERIC(32,2),AMOUNT	NUMERIC(32,2),mcode VARCHAR(300) )

--SELECT  @DATE1='2023-04-01 00:00:00',@DATE2='2023-06-22 00:00:00',@SETTLEMENTMODE=N'%',@DIVISION=N'%',@WAREHOUSE=N'%',@MGROUP=N'%',@FYID=N'79/80'

INSERT INTO @RESULT
exec RSP_STOCKSETTLEMNTSTATUS 
@DATE1=@DATE1,
@DATE2=@DATE2,
@SETTLEMENTMODE=@SETTLEMENTMODE,
@DIVISION=@DIVISION,
@WAREHOUSE=@WAREHOUSE,
@MGROUP=@MGROUP,
@FYID=@FYID


SELECT *,COUNT(*) OVER() ALLCOUNT , 'TOTAL' MENUCODE ,  SUM(OPQTY) OVER() OPQTY,SUM(REALQTY_IN) OVER() REALQTY_IN,SUM(REALQTY) OVER() REALQTY,SUM(NETQTY ) OVER() NETQTY ,SUM(AMOUNT) OVER() AMOUNT
FROM @RESULT

 
GO

/****** Object:  StoredProcedure [dbo].[WSP_STOCKSETTLEMNTREGISTER]    Script Date: 06/27/2023 6:33:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

create or  alter   PROC  [dbo].[WSP_STOCKSETTLEMNTREGISTER]
--declare

	@DATE1 DATETIME,
	@DATE2 DATETIME,
	@SETTLEMENTMODE varchar(25) = '%',
	@DIVISION VARCHAR(15) = '%'
AS

--select  @DATE1='2022-10-01 00:00:00',@DATE2='2023-06-22 00:00:00',@SETTLEMENTMODE=N'%',@DIVISION=N'%'

DECLARE @RESULT TABLE (TRNDATE	date, BSDATE VARCHAR(300), 	VCHRNO VARCHAR(300), 	TRNMODE VARCHAR(300), 	UNIT VARCHAR(300), 	RATE	VARCHAR(300), INQTY	VARCHAR(300),  OUTQTY VARCHAR(300), 	AMOUNT	VARCHAR(300),  REMARKS	VARCHAR(300),  FLAG	 VARCHAR(300), VNO	VARCHAR(300), TDATE VARCHAR(300))

INSERT INTO @RESULT
exec RSP_STOCKSETTLEMNTREGISTER @DATE1=@DATE1,@DATE2=@DATE2,@SETTLEMENTMODE=@SETTLEMENTMODE,@DIVISION=@DIVISION


SELECT FORMAT (TRNDATE ,'dd/MM/yyyy') DATE,* ,COUNT(*) OVER () ALLCOUNT FROM @RESULT 



 
GO

/****** Object:  StoredProcedure [dbo].[WSP_FoodCosting]    Script Date: 06/27/2023 6:33:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

create or  alter     PROC [dbo].[WSP_FoodCosting]
--DECLARE
@DATE1 DATE,
@DATE2 DATE,
@DIVISION VARCHAR(3) = '%' 
AS
DECLARE @RESULT TABLE (RECEIPEMCODE VARCHAR(200),MENUCODE VARCHAR(200),DESCA VARCHAR(1000),SOLDQTY VARCHAR(200),SOLDAMOUNT VARCHAR(200),IdealConsumption varchar(200),IdealFoodCost varchar(200),AdjAmount varchar(200),ActualFoodCost varchar(200))
--SELECT @DATE1='2023-04-01',@DATE2='2023-06-01'

insert @RESULT
EXEC RSP_FoodCosting
@DATE1=@DATE1,
@DATE2=@DATE2,
@DIVISION=@DIVISION
 

 select *,count(*) over() ALLCOUNT from @RESULT


GO

/****** Object:  StoredProcedure [dbo].[WSP_DSR]    Script Date: 06/27/2023 6:33:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

create or  alter    PROC [dbo].[WSP_DSR]
--DECLARE 
@D1 INT = 2023,
@D2 INT = 4,
@DIVISION VARCHAR(3) = '%',
@TextBoxValue DECIMAL (18,2) = 0
AS
DECLARE @RESULT TABLE (Particular VARCHAR(200),	Particulars VARCHAR(200),	[1] VARCHAR(200),	[2] VARCHAR(200),	[3] VARCHAR(200),	[4] VARCHAR(200),	[5]	VARCHAR(200), [6] VARCHAR(200),	[7]	VARCHAR(200), [8]	VARCHAR(200), [9]	VARCHAR(200), [10]	 VARCHAR(200),[11]	VARCHAR(200),[12] VARCHAR(200),	[13]	VARCHAR(200),[14]	VARCHAR(200),[15] VARCHAR(200),	[16] VARCHAR(200),	[17]VARCHAR(200),	[18] VARCHAR(200),	[19] VARCHAR(200),	[20]	VARCHAR(200), [21] VARCHAR(200),	[22] VARCHAR(200),	[23] VARCHAR(200),	[24] VARCHAR(200),	[25] VARCHAR(200),	[26] VARCHAR(200),	[27] VARCHAR(200),	[28] VARCHAR(200),	[29] VARCHAR(200),	[30]	 VARCHAR(200),[31] VARCHAR(200))
   	    
--SELECT  @D1=2023,@D2=4,@DIVISION=N'%',@TextBoxValue=0

INSERT INTO @RESULT
EXEC [RSP_DSR] 
@D1   = @D1,
@D2   = @D2,
@DIVISION    = @DIVISION,
@TextBoxValue   = @TextBoxValue


SELECT * ,COUNT(*) OVER() ALLCOUNT FROM @RESULT
GO

/****** Object:  StoredProcedure [dbo].[WSP_KOT_VS_PREBILL_VS_SALES_REPORT]    Script Date: 06/27/2023 6:33:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

create or  alter   PROCEDURE [dbo].[WSP_KOT_VS_PREBILL_VS_SALES_REPORT]
--DECLARE
@DATE1 DATETIME,
@DATE2 DATETIME
AS
DECLARE @RESULT TABLE (SNO  VARCHAR(100),	TRNDATE  VARCHAR(100),	 BSDATE	 VARCHAR(100),TABLENO VARCHAR(200),	KOTID  VARCHAR(100),	STATUS VARCHAR(100),	PREBILL1  VARCHAR(100),	PREBILL1_REMARKS VARCHAR(500),	PREBILL1_NETAMNT VARCHAR(100),	PREBILL2  VARCHAR(200),	PREBILL2_REMARKS  VARCHAR(500),	PREBILL_NETAMNT VARCHAR(100),	PREBILL3 VARCHAR(100),	PREBILL3_REMARKS	 VARCHAR(100),PREBILL3_NETAMNT	 VARCHAR(100), [BILL NO] VARCHAR(100),	[BILL AMOUNT]  VARCHAR(100))
--SELECT @DATE1='2023-01-01',@DATE2='2023-06-01'

INSERT INTO @RESULT
EXEC RSP_KOT_VS_PREBILL_VS_SALES_REPORT 
@DATE1=@DATE1,
@DATE2=@DATE2


SELECT * ,COUNT(*) OVER() ALLCOUNT FROM @RESULT

 
GO

/****** Object:  StoredProcedure [dbo].[WSP_KOTREPORT]    Script Date: 06/27/2023 6:33:39 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

 

create or  alter     PROCEDURE [dbo].[WSP_KOTREPORT]
--DECLARE 
@DATE1 DATETIME,
@DATE2 DATETIME,
@WAITER VARCHAR(50)='%',
@TBLNAME VARCHAR(25) = '%',
@TBLGROUP VARCHAR(50) = '%',
@OPT_REPTYPE VARCHAR(20) = '%',
@KOTTYPE TINYINT = 100,
@DIVISION VARCHAR(3) = '%'
AS
 
DECLARE @KOTREPORT TABLE (WAITER VARCHAR(200), 	TABLENO	VARCHAR(200),KOTNO VARCHAR(300),	KOTTIME	VARCHAR(50) ,ITEMCODE VARCHAR(200),	ITEMDESCRIPTION	VARCHAR(1000),QUANTITY NUMERIC(32,2),	UNIT VARCHAR(200),	
REMARKS VARCHAR(1000),	BILLED VARCHAR(200),	BILLNO	VARCHAR(200),TRANSFERKOT VARCHAR(200),	MERGEKOT VARCHAR(200),	SPLITKOT VARCHAR(200),	CANCELBY VARCHAR(200),	CANCELREMARKS  VARCHAR(200),	WAITERNAME VARCHAR(200),	FLG VARCHAR(10),	ISBARITEM VARCHAR(200))

INSERT INTO @KOTREPORT
EXEC NSP_KOTREPORT 
@TDATE1=@DATE1, 
@TDATE2=@DATE2,
@WAITER=@WAITER, 
@TBLNAME=@TBLNAME,
@TBLGROUP=@TBLGROUP,
@REPTYPE= @OPT_REPTYPE,
@KOTTYPE=@KOTTYPE, @DIV=@DIVISION


SELECT *, COUNT(*) OVER() ALLCOUNT FROM @KOTREPORT

 
GO



/****** Object:  StoredProcedure [dbo].[RSP_StockSettlement]    Script Date: 06/27/2023 6:35:00 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE OR ALTER  PROCEDURE [dbo].[RSP_StockSettlement] 
--DECLARE
	@DATE1 DATE,
	@DATE2 DATE,
	@DIVISION VARCHAR(3)= '%',
	@FYID VARCHAR(10) = '%'
AS
--SET @Date1='06/16/21';SET @date2= '08/26/23';SET @DIVISION = 'MMX'; SET @FYID = '79/80'
 
set nocount on
--GETTING DETAIL RECORD FOR STOCK REPORT PREPARATON
----------------------------------------------------
IF OBJECT_ID('TEMPDB..#RMD_TRNPROD') IS NOT NULL DROP TABLE #RMD_TRNPROD

SELECT * INTO #RMD_TRNPROD FROM 
(
	SELECT A.*,ISNULL(B.MCAT,'')MCAT,B.DESCA,B.MENUCODE,B.BARCODE,B.MGROUP,C.DESCA MGROUPNAME,C.MENUCODE MGROUPCODE,D.ACNAME SUPPLIER,B.BASEUNIT,B.RATE_A SRATE,F.NAME BRANCH
	FROM 
	(
		SELECT 'OP100' VCHRNO,A.DIVISION,A.MCODE,SUM(REALQTY) REALQTY,A.EXPORT,
		SUM(REALQTY_IN) REALQTY_IN,WAREHOUSE,A.BC BCC,A.AMOUNT AMNT,A.DISCOUNT,A.TAXABLE,A.NONTAXABLE, 
		CASE WHEN (A.REALQTY_IN * ISNULL(A.CRATE,0)) = 0 THEN  A.AMOUNT ELSE (A.REALQTY_IN * ISNULL(A.CRATE,0)) END CAMNT, A.VOUCHERTYPE, 0 CRATE, 0 PRATE 
		FROM RMD_TRNPROD A WITH (NOLOCK) INNER JOIN RMD_TRNMAIN B WITH (NOLOCK) ON A.VCHRNO=B.VCHRNO AND A.DIVISION =B.DIVISION
		WHERE (B.TRNDATE < @DATE1 OR A.VCHRNO LIKE 'OP%')  AND A.PhiscalID = @FYID
		GROUP BY A.DIVISION,A.MCODE,A.WAREHOUSE,A.BC,A.AMOUNT,A.DISCOUNT,A.TAXABLE,A.NONTAXABLE,A.EXPORT, A.REALQTY_IN,A.CRATE, A.VoucherType
		UNION ALL

		SELECT A.VCHRNO VCHRNO,A.DIVISION,A.MCODE,REALQTY,A.EXPORT, REALQTY_IN,WAREHOUSE,A.BC BCC,A.AMOUNT AMNT,A.DISCOUNT,A.TAXABLE,A.NONTAXABLE, A.AMOUNT, A.VOUCHERTYPE, A.CRATE, A.PRATE  
		FROM RMD_TRNPROD A WITH (NOLOCK) INNER JOIN RMD_TRNMAIN B WITH (NOLOCK) ON A.VCHRNO=B.VCHRNO AND A.DIVISION =B.DIVISION AND A.PhiscalID=B.PhiscalID 
		WHERE B.TRNDATE BETWEEN @DATE1 AND @DATE2 AND A.VCHRNO NOT LIKE 'OP%' AND A.PhiscalID = @FYID AND A.DIVISION LIKE @DIVISION
	) A INNER JOIN MENUITEM B ON A.MCODE= B.MCODE 
	LEFT JOIN MENUITEM C ON B.MGROUP = C.MCODE 
	LEFT JOIN RMD_ACLIST D ON ISNULL(B.SUPCODE,'') = D.ACID 
	INNER JOIN DIVISION F ON A.DIVISION = F.INITIAL
	WHERE B.PTYPE < 10
) AS A

--SELECT * FROM #RMD_TRNPROD



--GETTING ITEM WISE STOCK BALANCE RECORD WITH STOCK VALUE
---------------------------------------------------------
IF OBJECT_ID('TEMPDB..#RMD_TRNPROD1') IS NOT NULL DROP TABLE #RMD_TRNPROD1

--'OP','PI','PR','DN','SI','SR','TI','CN','IV','RE','IC','IR','DL','DR','TR','TO','SA','DM'
--------------------------------------------------------------------------------------------
SELECT * INTO #RMD_TRNPROD1 FROM
(
	SELECT A.MENUCODE,A.DESCA,A.BRANCH,A.BASEUNIT,A.OPQTY, A.OPVALUE,
	PQTY,PVALUE,SALESQTY,SALESVALUE,SALESCOST, TRANSFERINQTY,TRANSFERINVALUE,TRANSFEROUTQTY,TRANSFEROUTVALUE,STOCKADJUSTMENT,STOCKADJUSTMENTVALUE,
	SETTLEMENT,SETTLEMENTVALUE,STOCKBALANCE,
	STOCKVALUE= (CASE WHEN A.STOCKBALANCE < 0 THEN 0 ELSE B.PRATE END) * A.STOCKBALANCE,
	A.SUPPLIER,A.MCODE,A.MCAT,A.MGROUP,A.MGROUPNAME,A.MGROUPCODE,A.SRATE,
	PRATE = CASE WHEN  A.STOCKBALANCE<0 THEN 0 ELSE B.PRATE END
	FROM 
	(
		SELECT MCODE,
		--IIF(VOUCHERTYPE IN (''),,)
		OPQTY=SUM(IIF(VOUCHERTYPE IN ('OP'),REALQTY_IN-REALQTY,0)),
		OPVALUE = SUM(IIF(VOUCHERTYPE IN ('OP'),AMNT,0)),

		PQTY=SUM(IIF(VOUCHERTYPE IN ('PI','PR', 'DN'),REALQTY_IN-REALQTY,0)) ,
		PVALUE=SUM(IIF(VOUCHERTYPE IN ('PI','PR', 'DN'),IIF(VOUCHERTYPE IN ('PI'),1,-1) * (TAXABLE+NONTAXABLE),0)),

		SALESQTY=SUM(IIF(VOUCHERTYPE IN ('SI','SR','TI','IV','NC','RC','CN','RR'),REALQTY-REALQTY_in,0)),
		SALESVALUE=SUM(IIF(VOUCHERTYPE IN ('SI','SR','TI','IV','NC','RC','CN','RR'), IIF(VOUCHERTYPE IN ('SI','TI','IV','NC','RC'),1,-1) * (TAXABLE+NONTAXABLE),0)),
		SALESCOST=SUM(IIF(VOUCHERTYPE IN ('SI','SR','TI','IV','NC','RC','CN','RR'), (REALQTY-REALQTY_in) * IIF(CRATE>0, CRATE, PRATE),0)),
		
		TRANSFERINQTY=SUM(CASE WHEN LEFT(VCHRNO,2) ='TR' THEN REALQTY_IN ELSE 0 END ), 
		TRANSFERINVALUE=SUM(CASE WHEN LEFT(VCHRNO,2) ='TR' THEN AMNT ELSE 0 END ), 
		
		TRANSFEROUTQTY=SUM(CASE WHEN LEFT(VCHRNO,2) ='TO' THEN REALQTY ELSE 0 END ), 
		TRANSFEROUTVALUE=SUM(CASE WHEN LEFT(VCHRNO,2) ='TO' THEN AMNT ELSE 0 END ), 
		
		STOCKADJUSTMENT=SUM(CASE LEFT(VCHRNO,2) WHEN 'SA' THEN REALQTY_IN-REALQTY ELSE 0 END),
		STOCKADJUSTMENTVALUE=SUM(CASE LEFT(VCHRNO,2) WHEN 'SA' THEN CASE WHEN REALQTY_IN-REALQTY <= 0 THEN (AMNT*-1) ELSE (AMNT) END ELSE 0 END),
		
		SETTLEMENT=SUM(CASE LEFT(VCHRNO,2) WHEN 'DM' THEN  REALQTY_IN-REALQTY ELSE 0 END ),
		SETTLEMENTVALUE=SUM(CASE LEFT(VCHRNO,2) WHEN 'DM' THEN  CASE WHEN REALQTY_IN-REALQTY <=0 THEN (AMNT*-1) ELSE (AMNT) END ELSE 0 END),
		STOCKBALANCE=SUM(REALQTY_IN)-SUM(REALQTY),
	MCAT,DESCA,MENUCODE,MGROUP,MGROUPNAME,MGROUPCODE,SUPPLIER,BASEUNIT,SRATE,BRANCH
	FROM #RMD_TRNPROD A GROUP BY A.MCODE,MCAT,DESCA,MENUCODE,MGROUP,MGROUPNAME,MGROUPCODE,SUPPLIER,BASEUNIT,SRATE,BRANCH
	) A
	INNER JOIN 
	(
		SELECT A.MCODE,ISNULL(X.RATE,0) PRATE FROM
		MENUITEM A LEFT JOIN COSTING X ON A.MCODE = X.MCODE
	) B ON A.MCODE = B.MCODE
)A 

DECLARE @query  AS VARCHAR(MAX)
	,@colQty  AS NVARCHAR(MAX)
	,@colAmount  AS NVARCHAR(MAX)
	,@colheader  AS NVARCHAR(MAX)
	--CONVERT(VARCHAR,CAST(ABS(OPAMNT) AS MONEY),1)
		SET @colheader =  STUFF((SELECT distinct ',' 
		+ 'CONVERT(NUMERIC(18,2), SUM(ISNULL(' + QUOTENAME(TRNMODE) +',0)))'+ QUOTENAME(TRNMODE) 
		+ ',CONVERT(NUMERIC(18,2), SUM(ISNULL(' + QUOTENAME(TRNMODE + ' Value') +',0)))' + QUOTENAME(TRNMODE + ' Value') 
		FROM INVMAIN WHERE VOUCHERTYPE = 'DM'  FOR XML PATH(''), TYPE  ).value('.', 'NVARCHAR(MAX)')  ,1,1,'')
PRINT(@COLHEADER)

SET @colQty = STUFF((SELECT distinct ',' + QUOTENAME(TRNMODE ) 
            FROM INVMAIN WHERE VOUCHERTYPE = 'DM' FOR XML PATH(''), TYPE  ).value('.', 'NVARCHAR(MAX)')  ,1,1,'') + ',[ZZZ]'

SET @colAmount = STUFF((SELECT distinct ',' + QUOTENAME(TRNMODE+' VALUE') 
            FROM INVMAIN WHERE VOUCHERTYPE = 'DM' FOR XML PATH(''), TYPE  ).value('.', 'NVARCHAR(MAX)')  ,1,1,'') + ',[ZZZ_DR]'

PRINT(@colQty)
PRINT(@colAmount)

SET  @QUERY ='
SELECT MCODE,  ' + @colheader + ' INTO #RESULT FROM
(    
   SELECT B.TRNMODE, B.TRNMODE + '' Value'' TRNMODE_VALUE, A.MCODE, SUM(REALQTY_IN-REALQTY) QTY, SUM(A.AMOUNT * IIF(A.REALQTY_IN>0,1,-1)) AMOUNT
		FROM RMD_TRNPROD A WITH (NOLOCK) INNER JOIN RMD_TRNMAIN B WITH (NOLOCK) ON A.VCHRNO=B.VCHRNO AND A.DIVISION =B.DIVISION AND A.PhiscalID=B.PhiscalID 
		WHERE B.TRNDATE BETWEEN ''' + CONVERT(VARCHAR(10), @DATE1,101) + ''' AND ''' + CONVERT(VARCHAR(10), @DATE2,101) + ''' AND A.VCHRNO LIKE ''DM%'' 
		AND A.PhiscalID = ''' + @FYID + '''
		AND A.DIVISION = ''' + @DIVISION + '''
		GROUP BY B.TRNMODE, A.MCODE
) AS S
PIVOT
(
	SUM(QTY) for TRNMODE in ('+@colQty+')
) AS OP
PIVOT
(
	SUM(AMOUNT) for TRNMODE_VALUE in ('+@colAmount+')
) AS I
GROUP BY MCODE

SELECT  A.MENUCODE,A.DESCA,A.BASEUNIT, CONVERT(NUMERIC(18,2), OPVALUE) Opening,CONVERT(NUMERIC(18,2), PVALUE) Purchase, CONVERT(NUMERIC(18,2), TRANSFERINVALUE) [Transfer In]
, CONVERT(NUMERIC(18,2), TRANSFEROUTVALUE) [Transfer Out], B.*, CONVERT(NUMERIC(18,2), SETTLEMENTVALUE) SETTLEMENTVALUE, CONVERT(NUMERIC(18,2), SALESCOST) SALESCOST
, CONVERT(NUMERIC(18,2), STOCKADJUSTMENTVALUE) STOCKADJUSTMENTVALUE, STOCKBALANCE, CONVERT(NUMERIC(18,2), STOCKVALUE) STOCKVALUE FROM #RMD_TRNPROD1 A 
LEFT JOIN #RESULT B ON A.MCODE = B.MCODE ORDER BY A.DESCA'
PRINT @QUERY
EXECUTE(@QUERY)

/*

SELECT A.MENUCODE,A.DESCA,A.BASEUNIT,A.OPQTY,OPVALUE,PQTY,PVALUE,SALESQTY,SALESVALUE,SALESCOST,TRANSFERINQTY,TRANSFERINVALUE,
	TRANSFEROUTQTY,TRANSFEROUTVALUE,STOCKADJUSTMENT,STOCKADJUSTMENTVALUE,SETTLEMENT,SETTLEMENTVALUE,STOCKBALANCE,STOCKVALUE,
	A.SUPPLIER,A.BRANCH, B.* FROM #RMD_TRNPROD1 A LEFT JOIN #RESULT B ON A.MCODE = B.MCODE ORDER BY A.DESCA

	SELECT A.MENUCODE,A.DESCA,A.BASEUNIT,A.OPQTY,OPVALUE,PQTY,PVALUE,SALESQTY,SALESVALUE,SALESCOST,TRANSFERINQTY,TRANSFERINVALUE,
	TRANSFEROUTQTY,TRANSFEROUTVALUE,STOCKADJUSTMENT,STOCKADJUSTMENTVALUE,SETTLEMENT,SETTLEMENTVALUE,STOCKBALANCE,STOCKVALUE,
	A.SUPPLIER,A.BRANCH FROM #RMD_TRNPROD1 A ORDER BY A.DESCA
*/

			


IF OBJECT_ID('TEMPDB..#RMD_TRNPROD') IS NOT NULL DROP TABLE #RMD_TRNPROD
if object_id('tempdb..#TRNPROD') IS NOT NULL DROP TABLE #TRNPROD
IF OBJECT_ID('TEMPDB..#RMD_TRNPROD1') IS NOT NULL DROP TABLE #RMD_TRNPROD1
IF OBJECT_ID('TEMPDB..#tblWarehouse') is not null drop table #tblWarehouse
IF OBJECT_ID('TEMPDB..#COSTING') is not null drop table #COSTING

set nocount off



/****** Object:  StoredProcedure [dbo].[RSP_KOT_VS_PREBILL_VS_SALES_DETAIL]    Script Date: 06/27/2023 6:35:00 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


create or  alter   PROCEDURE [dbo].[RSP_KOT_VS_PREBILL_VS_SALES_DETAIL]
--DECLARE
	@DATE1 DATETIME,
	@DATE2 DATETIME
AS
--SELECT @DATE1 = '06 AUG 2020', @DATE2 = '16 OCT 2020'
set nocount ON;

IF OBJECT_ID('TEMPDB..#KotDetail') IS NOT NULL DROP TABLE #KotDetail
IF OBJECT_ID('TEMPDB..#PREBILL') IS NOT NULL DROP TABLE #PREBILL

SELECT KOTID,TABLENO,[STATUS],REMARKS [Bill No],[1] prebill1,[2] prebill2,[3] prebill3 into #PREBILL 
FROM
(
	SELECT b.*, TABLENO, [STATUS]
    FROM
	(
        SELECT ROW_NUMBER() OVER (PARTITION BY KS.KOTID, KS.Remarks ORDER BY KS.KOTID) SNO, KS.KOTID, KS.REMARKS, [value] from RMD_KOTMAIN_STATUS KS
		JOIN RMD_KOTMAIN KM ON KS.KOTID = KM.KOTID
        CROSS APPLY STRING_SPLIT(KS.REF_PREBILL_NOS, ',') 
		WHERE KM.TRNDATE BETWEEN @DATE1 AND @DATE2
    ) B JOIN  RMD_KOTMAIN_STATUS rks ON rks.KOTID=b.KOTID 	
) A
PIVOT( max([value]) for sno IN ([1],[2],[3]))as b
	     
	     
	     
SELECT kp.KOTID,KP.TABLENO,kp.TRNDATE,MCODE,ItemDesc,sum(IIF(Quantity > 0, Quantity,0)) orderQty,sum(IIF(Quantity < 0, Quantity,0)) cancelQty
INTO  #KotDetail
FROM RMD_KOTMAIN km 
JOIN RMD_KOTPROD kp ON km.KOTID=kp.KOTID 
JOIN RMD_KOTMAIN_STATUS rks ON rks.KOTID=kp.KOTID
WHERE  Quantity>0 AND KP.TRNDATE BETWEEN @DATE1 AND @DATE2 
group by kp.KOTID,kp.TABLENO,kp.TRNDATE,MCODE,ItemDesc


SELECT ROW_NUMBER() OVER (ORDER BY T.TRNDATE, P.KOTID) SNO, CAST(T.TRNDATE AS DATE) TRNDATE, p.KOTID,p.TABLENO,t.MCODE [ITEM CODE]
	,T.ITEMDESC [ITEM NAME], ORDERQTY [ORDER QTY], ISNULL(CANCELQTY,0) [CANCEL QTY], P.PREBILL1,P.PREBILL2,P.PREBILL3, TM.VCHRNO [BILL NO],TP.NETAMOUNT 		
FROM #PREBILL P
JOIN #KotDetail T ON P.KOTID = T.KOTID AND P.TABLENO=T.TABLENO
LEFT JOIN SALES_TRNMAIN TM ON P.[Bill No] = TM.VCHRNO
LEFT JOIN SALES_TRNPROD TP ON TM.VCHRNO=TP.VCHRNO AND TP.MCODE = T.MCODE

IF OBJECT_ID('TEMPDB..#KotDetail') IS NOT NULL DROP TABLE #KotDetail
IF OBJECT_ID('TEMPDB..#PREBILL') IS NOT NULL DROP TABLE #PREBILL
GO

/****** Object:  StoredProcedure [dbo].[RSP_FoodCosting]    Script Date: 06/27/2023 6:35:00 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

create or  alter     PROC [dbo].[RSP_FoodCosting]
--DECLARE
@DATE1 DATE,
@DATE2 DATE,
@DIVISION VARCHAR(3) = '%',
@MCODE VARCHAR(25) = '%',
@SELECTEDITEMLIST VARCHAR(500) = ''
AS

SET NOCOUNT ON
--SET @DATE1='2021-7-16 00:00:00'; SET @DATE2='2022-08-15 00:00:00'; SET @DIVISION=N'%'; SET @MCODE=N'%'; --SET @SELECTEDITEMLIST=N'M1010,M1011'

IF OBJECT_ID('TEMPDB..#RESULT') IS NOT NULL DROP TABLE tempdb..#RESULT
IF OBJECT_ID('TEMPDB..#RESULT1') IS NOT NULL DROP TABLE #RESULT1
IF OBJECT_ID('TEMPDB..#ADJUSTMENT') IS NOT NULL DROP TABLE #ADJUSTMENT

IF ISNULL(@SELECTEDITEMLIST,'') != '' SET @MCODE = @SELECTEDITEMLIST

SELECT CON.MCODE RawMCode, CON.UNIT, SUM(CON.Quantity) ConsumedQty, SUM(CON.AMOUNT) ConsumedAmount, TP.MCODE ReceipeMCode, SUM(TP.RealQty-TP.REALQTY_IN) SoldQty, SUM(Taxable + NonTaxable) SoldAmount 
INTO #RESULT FROM
(
	SELECT IM.VCHRNO, IM.TRNDATE, IM.REFBILL, IP.MCODE, IP.UNIT, (IP.RealQty - IP.REALQTY_IN) Quantity, IP.RATE, IP.AMOUNT, IP.REFSERIAL FROM INVMAIN IM (NOLOCK)
	JOIN INVPROD IP (NOLOCK) ON IM.VCHRNO = IP.VCHRNO 
	WHERE IM.TRNDATE BETWEEN @DATE1 AND @DATE2 AND  IM.VoucherType = 'RC' AND REFSERIAL IS NOT NULL AND IM.DIVISION LIKE @DIVISION 
	AND (@MCODE = '%' OR IP.MCODE in (select * from dbo.split(@MCODE,',')))
) CON 
JOIN TRNPROD TP ON CON.REFBILL = TP.VCHRNO AND CON.REFSERIAL = TP.SNO
GROUP BY CON.MCODE, CON.UNIT, TP.MCODE

/*
SELECT ReceipeMCode, SoldQty, SoldAmount, SUM(CONSUMEDAMOUNT), SUM(CONSUMEDAMOUNT)/SoldAmount * 100 FROM #RESULT
GROUP BY ReceipeMCode, SoldQty, SoldAmount
ORDER BY ReceipeMCode
*/

SELECT P.MCODE, SUM(P.REALQTY - P.REALQTY_IN) Quantity, SUM((P.RealQty - P.REALQTY_IN) * P.RATE) Amount INTO #Adjustment  FROM INVMAIN M 
JOIN INVPROD P ON M.VCHRNO = P.VCHRNO 
JOIN SETTLEMENTMODE S ON M.TRNMODE = S.DESCRIPTION
WHERE M.TRNDATE BETWEEN @DATE1 AND @DATE2 AND M.DIVISION LIKE @DIVISION AND M.VoucherType IN ('DM','SA') AND (M.VoucherType = 'SA' OR S.IncludeInFoodCosting = 1)
GROUP BY P.MCODE
--SELECT *, ConsumedQty/ SUM(ConsumedQty) OVER (PARTITION BY RawMCode) * 100 ConRatioQty, ConsumedAmount/ SUM(ConsumedAmount) OVER (PARTITION BY RawMCode) * 100 ConRatioAmount FROM #RESULT



	SELECT R.RawMcode, R.ReceipeMCode, R.MENUCODE, R.DESCA, R.UNIT, R.ConsumedQty, R.ConsumedQty / iif(TotalConsumed =0,1,TotalConsumed) ConRatio, R.SoldQty, 
	R.ConsumedAmount, R.SoldAmount 
	INTO #RESULT1 FROM
	(
		SELECT R.RawMcode, R.ReceipeMCode, M.MENUCODE, M.DESCA, R.UNIT, R.ConsumedQty, SUM(ConsumedQty) OVER (PARTITION BY RawMCode) TotalConsumed, R.SoldQty, 
		R.ConsumedAmount, R.SoldAmount
		, 2 FLG, 'A' [TYPE] FROM #RESULT R 
		JOIN MENUITEM M ON R.ReceipeMCode = M.MCODE
	) R

	SELECT ReceipeMCode, MENUCODE, DESCA, SoldQty, SoldAmount, SUM(CONSUMEDAMOUNT) IdealConsumption, SUM(CONSUMEDAMOUNT)/SoldAmount * 100 IdealFoodCost, 
	ISNULL(SUM(A.Amount * R.ConRatio),0) AdjAmount, (SUM(CONSUMEDAMOUNT) + ISNULL(SUM(A.Amount * R.ConRatio),0))/SoldAmount * 100 ActualFoodCost FROM #RESULT1 R
	LEFT JOIN #Adjustment A ON R.RawMcode = A.MCODE
	GROUP BY ReceipeMCode, SoldQty, SoldAmount, MENUCODE, DESCA
	ORDER BY ReceipeMCode
SET NOCOUNT OFF


GO

/****** Object:  StoredProcedure [dbo].[RSP_STOCKVALUATION_FIFO]    Script Date: 06/27/2023 6:35:00 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


create or  alter         PROCEDURE [dbo].[RSP_STOCKVALUATION_FIFO]   
--DECLARE  
 @DATE DATETIME,  
 @PATH VARCHAR(200) ='%',  
 @FYID VARCHAR(10),  
 @DETAIL TINYINT = 0,  
 @ITEM VARCHAR(max) = '%',   
 @DIVISION VARCHAR(3) = '%',  
 @JSON VARCHAR(MAX)  
AS  
--SET @DATE = '17 OCT 2022';  SET @DIVISION = 'MMD'; SET @FYID = '79/80'  
--SET @ITEM = 'M10010';   
--SET @DETAIL = 2
--SET @JSON = '[{"MCODE":"M10000","QTY":13.000}]'  
--SET @JSON = '[{"MCODE":"M10008","QTY":123.810}]'  
--DECLARE @DATE DATETIME = '03-27-18',@PATH VARCHAR(200) ='%',@PHISCALID VARCHAR(20)='%',@ITEM VARCHAR(25)= 'M28744P',@DETAIL TINYINT = 0  
--SET @SELECTEDITEMLIST = 'M10000,M10001,M10002,M10003,M10004,M10005,M10007,M10010,M10018'  
SET NOCOUNT ON  
  
IF OBJECT_ID('TEMPDB..#ITEMLIST') IS NOT NULL DROP TABLE #ITEMLIST  
SELECT MCODE, QTY INTO #ITEMLIST FROM OPENJSON(@JSON) A  
CROSS APPLY OPENJSON(A.[VALUE])  
WITH  
(  
 MCODE VARCHAR(25) '$.MCODE',  
 QTY NUMERIC(18,5) '$.QTY'  
)  
  
IF @DETAIL = 10   --OPENING STOCK VALUE ONLY  
BEGIN  
 SELECT SUM(A.REALQTY_IN * A.REALRATE) STOCKVALUE FROM RMD_TRNPROD A WITH (NOLOCK) INNER JOIN MENUITEM C WITH (NOLOCK) ON A.MCODE = C.MCODE WHERE A.VCHRNO LIKE 'OP%' AND ISNULL(C.PTYPE,0) <10   
 AND WAREHOUSE IN (SELECT NAME FROM RMD_WAREHOUSE WHERE ISNULL(IsAdjustment,0) =0 AND ISNULL(ISVIRTUAL,0)=0 AND A.DIVISION LIKE @DIVISION) AND A.PHISCALID = @FYID   
 GOTO GOEND  
END  
  
DECLARE @SampleAllData TINYINT  
DECLARE @IGNOREMINUSTK TINYINT, @IgnoreTRRate VARCHAR(2)  
SELECT @IGNOREMINUSTK = ISNULL(IGNOREMINUSSTKINSVALUATION, 0), @SampleAllData = ISNULL(SampleOverallDataForValuation, 0) FROM SETTING  
SET @IgnoreTRRate = IIF( COALESCE((SELECT SettingValue FROM ReportSetting WHERE ReportName = 'Stock Valuation Report' AND SettingName = 'IgnoreTransferInRate'),'0')='0', 'TR','')  
--TEMPORARY TABLE FOR STOCK VALUATION DETAIL RECORD  
----------------------------------------------------  
IF OBJECT_ID('TEMPDB..#RESULT') IS NOT NULL DROP TABLE #RESULT  
IF OBJECT_ID('TEMPDB..#STOCK') IS NOT NULL DROP TABLE #STOCK  
IF OBJECT_ID('TEMPDB..#STOCK1') IS NOT NULL DROP TABLE #STOCK1  
IF OBJECT_ID('TEMPDB..#VALUATION_STOCK') IS NOT NULL DROP TABLE #VALUATION_STOCK  
create TABLE #RESULT (VCHRNO VARCHAR(25),TRNDATE DATETIME,MCODE VARCHAR(25),PQTY NUMERIC(18,6),QTY NUMERIC(18,6),RATE NUMERIC(18,6),AMOUNT NUMERIC(18,6), EXPDATE DATETIME)  
  
--GETTING STOCK QTY  
--------------------  
  
SELECT A.*, W.DIVISION INTO #STOCK1 FROM  
(  
 SELECT  A.WAREHOUSE, A.MCODE,SUM(REALQTY_IN)-SUM(REALQTY) AS STOCKQTY FROM RMD_TRNPROD A  
 INNER JOIN RMD_TRNMAIN B ON A.VCHRNO= B.VCHRNO  
 WHERE A.PhiscalID = @FYID AND (B.TRNDATE <=@DATE OR A.VoucherType = 'OP')  
 GROUP BY A.MCODE, A.WAREHOUSE  HAVING SUM(REALQTY_IN)-SUM(REALQTY) <> 0  
) A  
INNER JOIN MENUITEM B ON A.MCODE=B.MCODE  
JOIN RMD_WAREHOUSE W ON A.WAREHOUSE = W.[NAME]  
WHERE ISNULL(W.IsAdjustment,0) =0 AND ISNULL(W.ISVIRTUAL,0)=0  
AND B.PTYPE < 10 --AND ISNULL(B.MCAT,'') LIKE @MENUCAT AND ISNULL(B.MGROUP,'') LIKE @MGROUP AND ISNULL(B.SUPCODE,'') LIKE @SUPPLIER_ACID  
AND (@JSON <>'[]' AND (ISNULL(A.MCODE,'') in (select MCODE from #ITEMLIST)) OR (@JSON ='[]' and ISNULL(A.MCODE,'') like @ITEM))  
  
  
SELECT MCODE, SUM(STOCKQTY) STOCKQTY INTO #VALUATION_STOCK FROM #STOCK1 WHERE @SampleAllData = 1 OR DIVISION LIKE @DIVISION   
GROUP BY MCODE  
  
  
SELECT MCODE, SUM(STOCKQTY) STOCKQTY INTO #STOCK FROM #STOCK1 WHERE DIVISION LIKE @DIVISION  GROUP BY MCODE  
  
--SELECT * from #stock --WHERE MCODE = 'M29370P' order by mcode  
  
--GETTTING PURCHASE/OPENING/BranchIn RECORD FOR VALUATION  
-------------------------------  
IF OBJECT_ID('TEMPDB..#DATA') IS NOT NULL DROP TABLE #DATA  
  
SELECT A.VCHRNO,A.TRNDATE,C.MCODE, A.EXPDATE, ISNULL(QTY,0) QTY,ISNULL(RATE,0) RATE,ISNULL(C.STOCKQTY,0) STOCKQTY INTO #DATA FROM #VALUATION_STOCK C   
LEFT JOIN   
(  
 SELECT A.VCHRNO,B.TRNDATE,A.MCODE,A.EXPDATE, SUM(REALQTY_IN) QTY,SUM((CASE WHEN ISNULL(A.CRATE,0) = 0 THEN ISNULL(RATE,0) ELSE ISNULL(A.CRATE,0) END) * REALQTY_IN)/sum(REALQTY_IN) AS RATE   
 FROM  RMD_TRNPROD A   
 INNER JOIN RMD_TRNMAIN B ON A.VCHRNO=B.VCHRNO --AND A.DIVISION=B.DIVISION AND ISNULL(A.PHISCALID,'')=ISNULL(B.PHISCALID,'')  
 INNER JOIN MENUITEM M ON A.MCODE = M.MCODE  
 WHERE  A.PhiscalID = @FYID  AND A.VoucherType IN ('PI','OP','PD','DA',@IgnoreTRRate) AND ISNULL(REALQTY_IN,0) <> 0   
 AND ISNULL(A.WAREHOUSE,'') IN (SELECT NAME FROM RMD_WAREHOUSE WHERE ISNULL(IsAdjustment,0) =0 AND ISNULL(ISVIRTUAL,0)=0 AND (@SampleAllData = 1 OR DIVISION LIKE @DIVISION))  
 AND M.PTYPE < 10 AND B.TRNDATE <= @DATE --AND ISNULL(M.MCAT,'') LIKE @MENUCAT AND ISNULL(M.MGROUP,'') LIKE @MGROUP AND ISNULL(M.SUPCODE,'') LIKE @SUPPLIER_ACID  
 AND (@JSON <>'[]' AND (ISNULL(A.MCODE,'') in (select MCODE from #ITEMLIST)) OR (@JSON ='[]' and ISNULL(A.MCODE,'') like @ITEM))  
 GROUP BY A.VCHRNO,B.TRNDATE,A.MCODE, A.EXPDATE  
 HAVING SUM(REALQTY_IN) > 0  
) AS A ON C.MCODE=A.MCODE  
  
  
--PROCESSING RECORD FOR STOCK VALUATION  
-----------------------------------------   
  
--SELECT VCHRNO, TRNDATE, QTY, RATE, STOCKQTY, SUM(QTY) OVER (PARTITION BY MCODE ORDER BY TRNDATE DESC, VCHRNO DESC) CIW_QTY, MCODE, EXPDATE FROM #DATA WHERE MCODE = 'M29370P'  
--STOCK CALCULATION LOGIC  
--Get CIW_QTY = Cumulative InWardQty  in descending order by transaction time  
--If Total Stock is greater than CIW_QTY and its not the last row then all qty in voucher should be available  
--Else only total stock - CIW_QTY of previous voucher should be available (also applicable If Total Stock is greater than Total InWard Qty)  
--following query does not address -ve stock & if Stock has been added via another method that is not taken in valuation query above  
  
INSERT INTO #RESULT(VCHRNO,TRNDATE,MCODE,QTY,RATE,AMOUNT,PQTY, EXPDATE)  
SELECT VCHRNO, TRNDATE, MCODE, STKQTY, RATE, STKQTY * RATE AMOUNT, PQTY, EXPDATE FROM  
(  
 SELECT VCHRNO, TRNDATE, QTY PQTY, RATE,   
 IIF(STOCKQTY>=CIW_QTY AND LEAD(CIW_QTY) OVER (PARTITION BY MCODE ORDER BY TRNDATE DESC, VCHRNO DESC) IS NOT NULL, QTY,   
  STOCKQTY - ISNULL(LAG(CIW_QTY) OVER (PARTITION BY MCODE ORDER BY TRNDATE DESC, VCHRNO DESC),0)) STKQTY,                        --Remainging Stock/voucher should be total stock left minus cumulative purchase qty of previous voucher  
 NULL VRATE, A.MCODE, 'B' FLG, EXPDATE FROM   
 (  
  --Get CIW_QTY = Cumulative Purchase/In Qty  
  SELECT VCHRNO, TRNDATE, QTY, RATE, S.STOCKQTY, SUM(QTY) OVER (PARTITION BY D.MCODE ORDER BY TRNDATE DESC,VCHRNO DESC) CIW_QTY, D.MCODE, EXPDATE FROM #DATA D  
  JOIN #VALUATION_STOCK S ON D.MCODE = S.MCODE --WHERE MCODE = 'M22880P'  
 )A   
) B WHERE STKQTY > 0  
  
--SELECT * FROM #RESULT WHERE MCODE = 'M6654'   
  
IF OBJECT_ID('TEMPDB..#RESULT1') IS NOT NULL DROP TABLE #RESULT1  
SELECT S.MCODE, M.MENUCODE, M.DESCA, M.BASEUNIT, S.STOCKQTY QTY, C.RATE   
INTO #RESULT1 FROM #STOCK S LEFT JOIN  
(  
 SELECT A.MCODE, M.MENUCODE, M.DESCA, M.BASEUNIT, A.QTY, ISNULL(A.RATE, IIF(ISNULL(M.CRATE,0) = 0, M.PRATE_A, M.CRATE)) RATE  FROM  
 (  
  SELECT A.MCODE, SUM(A.QTY) QTY, SUM(A.RATE * A.QTY)/SUM(A.QTY) RATE FROM #RESULT A WHERE VCHRNO IS NOT NULL GROUP BY A.MCODE  
  UNION ALL  
  SELECT S.MCODE,S.STOCKQTY QTY, IIF(@IGNOREMINUSTK = 1, 0, NULL) RATE FROM #VALUATION_STOCK S WHERE STOCKQTY < 0   
  UNION ALL   
  SELECT S.MCODE, S.STOCKQTY QTY, NULL RATE FROM #DATA S WHERE STOCKQTY > 0 AND VCHRNO IS NULL  
 )  A JOIN MENUITEM M ON A.MCODE = M.MCODE  
 /*  
 */  
) C ON S.MCODE = C.MCODE  
JOIN MENUITEM M ON S.MCODE = M.MCODE  
  
IF @DETAIL = 0   --CLOSING STOCK VALUTION - IN SUMMARY REPORT   
 SELECT *, A.RATE * A.QTY [VALUE] FROM #RESULT1 A ORDER BY A.DESCA   
   
ELSE IF @DETAIL = 1     -- CLOSING STOCK VALUATION REPORT - IN DETAIL  
 SELECT * FROM   
 (  
  SELECT B.MENUCODE, B.DESCA VCHRNO,NULL TRNDATE,NULL PQTY,NULL RATE,NULL STKQTY,NULL AMOUNT,NULL VRATE,A.MCODE MC,'A' FLG,0 VNO FROM #RESULT1 A INNER JOIN MENUITEM B ON A.MCODE = B.MCODE  
  UNION ALL  
  SELECT NULL ITEM, A.VCHRNO, A.TRNDATE, A.PQTY, A.RATE, A.QTY STKQTY, AMOUNT, NULL VRATE, A.MCODE,'B' FLG,cast(right((left(vchrno,LEN(vchrno)-10)),(len((left(vchrno,LEN(vchrno)-10)))-2)) as int) VNO FROM #RESULT A   
  UNION ALL  
  SELECT NULL ITEM,'TOTAL >>',NULL,NULL,NULL,A.QTY STKQTY, A.RATE * A.QTY AMOUNT, A.RATE VRATE,A.MCODE,'C' FLG,0 VNO FROM #RESULT1 A  
  UNION ALL  
  SELECT NULL, NULL VCHRNO,NULL TRNDATE,NULL PQTY,NULL RATE,NULL STKQTY,NULL AMOUNT,NULL,A.MCODE MC,'D' FLG,0 VNO FROM #RESULT1 A  
  UNION ALL  
  SELECT NULL ITEM,'GRAND TOTAL >>',NULL,NULL,NULL,SUM(A.QTY) STKQTY,SUM(A.QTY * A.RATE) AMOUNT,NULL VRATE,'ZZZZZZZZZZZZZZZZZZZZ' MCODE,'E' FLG,0 VNO FROM #RESULT1 A    
 ) A ORDER BY A.MC,FLG,TRNDATE ASC,VNO ASC  
ELSE IF @DETAIL = 2 -- CLOSING STOCK VALUATION REPORT - IN DETAIL  
BEGIN  
 --SELECT *, A.RATE * A.QTY [VALUE] FROM #RESULT1 A ORDER BY MCODE  
 --SELECT A.VCHRNO, A.TRNDATE, A.PQTY, A.RATE, A.QTY STKQTY, AMOUNT, SUM(A.QTY) OVER (PARTITION BY MCODE ORDER BY TRNDATE, VCHRNO) CIW_QTY, A.MCODE FROM #RESULT A  

 SELECT * FROM  
 (  
  SELECT A.VCHRNO, A.MCODE, A.RATE,  
  IIF(A.INV_QTY>=A.CIW_QTY, QTY,   
   A.INV_QTY - ISNULL(LAG(A.CIW_QTY) OVER (PARTITION BY A.MCODE ORDER BY TRNDATE, VCHRNO),0)) USED_QTY FROM   
   (  
    SELECT A.MCODE, A.VCHRNO, A.TRNDATE, A.RATE, A.QTY, I.QTY INV_QTY, SUM(A.QTY) OVER (PARTITION BY A.MCODE ORDER BY TRNDATE, VCHRNO) CIW_QTY FROM #RESULT A JOIN #ITEMLIST I ON A.MCODE = I.MCODE  
   ) A  
 ) A WHERE USED_QTY >0  
END   
ELSE IF @DETAIL =5  
BEGIN  
 SELECT A.MCODE,SUM(A.RATE * A.USED_QTY)/IIF(SUM(A.USED_QTY)=0,1,SUM(A.USED_QTY)) RATE FROM  
 (  
  SELECT A.MCODE, A.RATE,  
  IIF(A.INV_QTY>=A.CIW_QTY, QTY,   
   A.INV_QTY - ISNULL(LAG(A.CIW_QTY) OVER (PARTITION BY A.MCODE ORDER BY TRNDATE, VCHRNO),0)) USED_QTY FROM   
   (  
    SELECT A.MCODE, A.VCHRNO, A.TRNDATE, A.RATE, A.QTY, I.QTY INV_QTY, SUM(A.QTY) OVER (PARTITION BY A.MCODE ORDER BY TRNDATE, VCHRNO) CIW_QTY FROM #RESULT A JOIN #ITEMLIST I ON A.MCODE = I.MCODE  
   ) A  
 ) A WHERE USED_QTY >0  
 GROUP BY A.MCODE  
  
 --USE FOLLOWING LINES FOR DEBUGGING PURPOSE  
 /*  
 SELECT A.MCODE, A.RATE,  
  IIF(A.INV_QTY>=A.CIW_QTY, QTY,   
   A.INV_QTY - ISNULL(LAG(A.CIW_QTY) OVER (PARTITION BY A.MCODE ORDER BY TRNDATE, VCHRNO),0)) USED_QTY FROM   
   (  
    SELECT A.MCODE, A.VCHRNO, A.TRNDATE, A.RATE, A.QTY, I.QTY INV_QTY, SUM(A.QTY) OVER (PARTITION BY A.MCODE ORDER BY TRNDATE, VCHRNO) CIW_QTY FROM #RESULT A JOIN #ITEMLIST I ON A.MCODE = I.MCODE  
   ) A  
 SELECT A.MCODE, A.VCHRNO, A.TRNDATE, A.RATE, A.QTY, I.QTY INV_QTY, SUM(A.QTY) OVER (PARTITION BY A.MCODE ORDER BY TRNDATE, VCHRNO) CIW_QTY FROM #RESULT A JOIN #ITEMLIST I ON A.MCODE = I.MCODE  
 */  
END  
ELSE IF @DETAIL = 50 -- CLOSING STOCK VALUE ONLY   
 SELECT SUM(A.RATE * A.QTY) STKVALUE FROM #RESULT1 A  
ELSE IF @DETAIL = 100  -- MCODE WISE STOCK VALUE IN COSTING TABLE FOR STOCK REPORT PURPOSE  
BEGIN  
 DELETE FROM COSTING  
 INSERT INTO COSTING (MCODE,RATE) SELECT A.MCODE, A.RATE FROM #RESULT1 A  
END  
ELSE IF @DETAIL = 101  -- MCODE WISE STOCK VALUE IN COSTING TABLE FOR STOCK REPORT PURPOSE  
BEGIN     
 DELETE FROM COSTING_DAYWISE WHERE TRNDATE = @DATE  
 INSERT INTO COSTING_DAYWISE (TRNDATE, MCODE,RATE) SELECT @DATE, A.MCODE, RATE FROM #RESULT1 A  
END    
  
GOEND:  
SET NOCOUNT OFF

GO
 
create or  alter PROCEDURE  [dbo].[RSP_STOCKSETTLEMNTSTATUS]

	@DATE1 DATETIME,
	@DATE2 DATETIME,
	@SETTLEMENTMODE VARCHAR(25) = '%',
	@DIVISION VARCHAR(15) = '%',
	@WAREHOUSE VARCHAR(25) = '%',
	@MGROUP VARCHAR(25),
	@FYID VARCHAR(10) = ''
AS
SELECT A.MENUCODE,DESCA, BASEUNIT, OPQTY,REALQTY_IN, REALQTY,(OPQTY+REALQTY_IN-REALQTY) AS NETQTY, PRATE_A, (OPQTY+REALQTY_IN-REALQTY) * PRATE_A AS AMOUNT,a.mcode
FROM
(
	SELECT A.MCODE,
	SUM(CASE WHEN C.TRNDATE< @DATE1 THEN REALQTY_IN-REALQTY ELSE 0 END) AS OPQTY,
	SUM(CASE WHEN C.TRNDATE>= @DATE1 THEN A.REALQTY ELSE 0 END) AS REALQTY,
	SUM(CASE WHEN C.TRNDATE>= @DATE1 THEN A.REALQTY_IN ELSE 0 END) AS REALQTY_IN
	FROM RMD_TRNPROD A, RMD_TRNMAIN C WHERE A.VCHRNO = C.VCHRNO AND A.DIVISION = C.DIVISION
	AND A.VCHRNO LIKE 'DM%' AND A.DIVISION LIKE @DIVISION AND A.PhiscalID = @FYID AND TRNDATE<= @DATE2 AND TRNMODE LIKE @SETTLEMENTMODE 
	AND A.WAREHOUSE LIKE @WAREHOUSE 
	GROUP BY MCODE
) AS B, MENUITEM A WHERE B.MCODE = A.MCODE AND MGROUP LIKE @MGROUP ORDER BY DESCA


GO
 
/****** Object:  StoredProcedure [dbo].[RSP_STOCKSETTLEMNTREGISTER]    Script Date: 06/27/2023 6:37:52 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROC  [dbo].[RSP_STOCKSETTLEMNTREGISTER]
	@DATE1 DATETIME,
	@DATE2 DATETIME,
	@SETTLEMENTMODE varchar(25) = '%',
	@DIVISION VARCHAR(15) = '%'
AS
SELECT * FROM
(	
	SELECT A.TRNDATE, A.BSDATE, A.VCHRNO,A.TRNMODE, NULL AS UNIT, NULL AS RATE, NULL AS INQTY, NULL AS OUTQTY, NULL AS AMOUNT, A.REMARKS,
	'A' AS FLAG,A.VCHRNO AS VNO,TRNDATE AS TDATE  FROM RMD_TRNMAIN A WHERE VCHRNO LIKE 'DM%' AND (TRNDATE>=@DATE1 AND TRNDATE<= @DATE2) AND TRNMODE LIKE @SETTLEMENTMODE AND DIVISION LIKE @DIVISION
	UNION ALL
	SELECT NULL, NULL, B.MENUCODE, B.DESCA,B.BASEUNIT,A.REALRATE,A.REALQTY_IN,A.REALQTY,A.AMOUNT,A.WAREHOUSE,'B' AS FLAG,A.VCHRNO AS VNO,TRNDATE AS TDATE
	FROM RMD_TRNPROD A, MENUITEM B, RMD_TRNMAIN C WHERE A.MCODE = B.MCODE AND A.VCHRNO = C.VCHRNO AND A.DIVISION = C.DIVISION AND A.VCHRNO LIKE 'DM%'
	AND (TRNDATE>=@DATE1 AND TRNDATE<= @DATE2) AND TRNMODE LIKE @SETTLEMENTMODE  AND A.DIVISION LIKE @DIVISION
	UNION ALL
	SELECT NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,
	'C' AS FLAG,A.VCHRNO AS VNO,TRNDATE AS TDATE  FROM RMD_TRNMAIN A WHERE VCHRNO LIKE 'DM%' AND (TRNDATE>=@DATE1 AND TRNDATE<= @DATE2) AND TRNMODE LIKE @SETTLEMENTMODE AND DIVISION LIKE @DIVISION

) AS A ORDER BY VNO, FLAG,TDATE

 GO 
create or  alter   PROCEDURE [dbo].[NSP_KOTREPORT]
--DECLARE 
@TDATE1 VARCHAR(25),
@TDATE2 VARCHAR(25),
@WAITER VARCHAR(50)='%',
@TBLNAME VARCHAR(25) = '%',
@TBLGROUP VARCHAR(50) = '%',
@REPTYPE VARCHAR(20) = '%',
@KOTTYPE TINYINT = '100',
@DIV VARCHAR(3) = '%'
AS

/*
SET @TDATE1 = '9-01-2018'
SET @TDATE2 = '01-01-2020'
SET @REPTYPE = 'MERGE'
SET @KOTTYPE = 100
SET @WAITER = '%'
*/



IF @REPTYPE IN ('CANCELLED', 'CANCEL')
 	SET @REPTYPE = 'CANCEL%'

SELECT * FROM 
(
	SELECT DISTINCT UPPER(ISNULL(A.WAITERNAME,'N/A')) WAITER,NULL TABLENO,NULL KOTNO,NULL KOTTIME,NULL ITEMCODE, NULL ITEMDESCRIPTION, NULL QUANTITY, NULL UNIT,NULL REMARKS,NULL BILLED, NULL BILLNO, NULL TRANSFERKOT, NULL MERGEKOT, NULL SPLITKOT,
	NULL CANCELBY,NULL CANCELREMARKS, UPPER(A.WAITERNAME) WAITERNAME,'A' FLG,NULL ISBARITEM FROM KOTRECORD A 
	LEFT JOIN TABLELIST B ON A.TABLENO = B.TableNo 
	INNER JOIN MENUITEM X ON A.MCODE = X.MCODE 
	WHERE A.TRNDATE BETWEEN @TDATE1 AND @TDATE2 AND ISNULL(A.WAITERNAME,'') LIKE @WAITER AND ISNULL(B.LAYOUTNAME,'')  LIKE @TBLGROUP AND A.TABLENO LIKE @TBLNAME AND 
	((@KOTTYPE = 100 AND ISNULL(X.ISBARITEM,0)<15) OR (@KOTTYPE <> 100 AND ISNULL(X.ISBARITEM,0)= @KOTTYPE)) AND
	ISNULL(A.BILLED,'') LIKE @REPTYPE

	UNION ALL

	SELECT CONVERT(VARCHAR(10),A.TRNDATE,10),A.TABLENO,A.KOTID KOTNO,A.KOTTIME KOTTIME,X.MENUCODE ITEMCODE,X.DESCA ITEMDESCRIPTION,A.QUANTITY,UNIT,A.RMKS,
	A.BILLED, A.BILLNO, A.TRANSFERKOTID, A.MERGEKOTID, A.SPLITKOTID, A.CUSER,A.CREMARKS, UPPER(ISNULL(A.WAITERNAME,'N/A')) WAITERNAME,'B' FLG,X.ISBARITEM FROM KOTRECORD A 
	LEFT JOIN TABLELIST B ON A.TABLENO = B.TableNo 
	INNER JOIN MENUITEM X ON A.MCODE = X.MCODE 
	WHERE A.TRNDATE BETWEEN @TDATE1 AND @TDATE2 AND ISNULL(A.WAITERNAME,'') LIKE @WAITER AND ISNULL(B.LAYOUTNAME,'')  LIKE @TBLGROUP AND A.TABLENO LIKE @TBLNAME AND 
	((@KOTTYPE = 100 AND ISNULL(X.ISBARITEM,0)<15) OR (@KOTTYPE <> 100 AND ISNULL(X.ISBARITEM,0)= @KOTTYPE)) AND
	ISNULL(A.BILLED,'') LIKE @REPTYPE

	UNION ALL

	SELECT DISTINCT NULL,NULL TABLENO,NULL KOTNO,NULL KOTTIME,NULL ITEMCODE, NULL ITEMDESCRIPTION, NULL QUANTITY, NULL UNIT,NULL REMARKS,NULL BILLED, NULL BILLNO, NULL TRANSFERKOT, NULL MERGEKOT, NULL SPLITKOT,NULL CUSER,NULL CREMARKS,UPPER(ISNULL(A.WAITERNAME,'N/A')) WAITERNAME,'C' FLG,NULL MCAT FROM KOTRECORD A
	LEFT JOIN TABLELIST B ON A.TABLENO = B.TableNo 
	INNER JOIN MENUITEM X ON A.MCODE = X.MCODE
	WHERE A.TRNDATE BETWEEN @TDATE1 AND @TDATE2 AND ISNULL(A.WAITERNAME,'') LIKE @WAITER AND ISNULL(B.LAYOUTNAME,'')  LIKE @TBLGROUP AND A.TABLENO LIKE @TBLNAME AND
	((@KOTTYPE = 100 AND ISNULL(X.ISBARITEM,0)<15) OR (@KOTTYPE <> 100 AND ISNULL(X.ISBARITEM,0)= @KOTTYPE)) AND
	ISNULL(A.BILLED,'') LIKE @REPTYPE
) A ORDER BY ISNULL(A.WAITERNAME,'N/A'),FLG,KOTNO,kottime