CREATE OR ALTER     PROCEDURE [dbo].[WSP_STOCKSUMMARYREPORT_DETAILFORMAT]
--DECLARE
@DATE1 DATE,
@DATE2 DATE, 
@PHISCALID VARCHAR(20)='%', 
@COMPANYID VARCHAR(25) = '%', 
@DIV VARCHAR(25)='%',
@WAREHOUSE VARCHAR(100) = '%',
@MCODE VARCHAR(MAX)='%',
@MGROUP VARCHAR(MAX) = '%',
@PTYPE INT = '100',
@MCAT VARCHAR(50) = '%',
@SUPCODE VARCHAR(25)= '%',
@REPORTTYPE TINYINT = 0,			-- 0 : Item Wise  1 : Item Group Wise 2 : Item Category Wise
@ShowItemInGroupWiseReport tinyint = 0,
@ReportMode tinyint = 0,				-- 0 : Show All   1 : Excluding Zero  2 : Negetive Stock 3 : Zero Only
@ShowDetail tinyint =0,
@SHOWBATCHWISESTOCK tinyint =0,
@ShowAltUnitStockReport tinyint,
@params NVARCHAR(MAX),
@SHOWGROUPING TINYINT = 0,
@MANUFACTURER VARCHAR(100)= '%',
@SHOWLCOSTFORLOCALPURCHASE TINYINT = 0

AS

set nocount on

--SET @DATE1=N'2022-07-17' ; SET @DATE2=N'2022-12-06' ; SET @PHISCALID=N'79/80' ; SET @COMPANYID=N'IMS01' ; SET @DIV=N'%' ; SET @MCODE=N'%' ; SET @REPORTTYPE=N'0' ; SET @ShowItemInGroupWiseReport=1 ; SET @ReportMode=N'0' ; SET @WAREHOUSE=N'%' ; SET @MGROUP=N'PRG104972,PRG105585,PRG105733,PRG105762' ; SET @PTYPE=100 ; SET @MCAT=N'%' ; SET @SUPCODE=N'%' ; SET @ShowDetail=1 ; SET @params=N'' ; SET @SHOWBATCHWISESTOCK=0 ; SET @ShowAltUnitStockReport=0


DECLARE @BDATE DATE
SELECT @BDATE = BEGINDATE FROM PhiscalYear WHERE PhiscalID = @PHISCALID

IF OBJECT_ID('TEMPDB..#MENUITEM_LIST') is not null drop table #MENUITEM_LIST
	CREATE TABLE #MENUITEM_LIST (MCODE VARCHAR(50),MENUCODE VARCHAR(100), DESCA VARCHAR (500), UNIT VARCHAR (50), MGROUP VARCHAR (50), SUPCODE VARCHAR(30), MCAT VARCHAR (100) ,PTYPE INT,MANUFACTURER VARCHAR(250))


 
		if @MCODE = '%' AND @MGROUP = '%'

		INSERT INTO #MENUITEM_LIST (MCODE,MENUCODE,DESCA,UNIT,MGROUP,SUPCODE,MCAT,PTYPE,MANUFACTURER) SELECT MCODE,MENUCODE,DESCA,BASEUNIT,MGROUP,SUPCODE,MCAT,PTYPE,MANUFACTURER FROM MENUITEM WHERE TYPE='A' AND ISNULL(MCAT,'') LIKE @MCAT AND ISNULL(MANUFACTURER,'') LIKE @MANUFACTURER AND ((@PTYPE = 100 AND PTYPE<10) OR (@PTYPE <> 100 AND PTYPE = @PTYPE)) 
	ELSE
		BEGIN
			IF @MCODE = '%'
				BEGIN
				
					IF OBJECT_ID('TEMPDB..#MCODEINHIERARCHY') is not null drop table #MCODEINHIERARCHY
					CREATE TABLE #MCODEINHIERARCHY (MGCODE VARCHAR(100),  ITEMS	VARCHAR(2000),[PATH] VARCHAR(2000)	,PARENT VARCHAR(100),	LEVELS VARCHAR(25),	TYPE VARCHAR(1))
				
				 
					DECLARE GROUPCURSOR CURSOR FOR 
					SELECT * FROM DBO.Split(@MGROUP ,',')

					DECLARE @GROUPNAME VARCHAR(200)

					OPEN GROUPCURSOR
					FETCH NEXT FROM GROUPCURSOR INTO @GROUPNAME
					WHILE @@FETCH_STATUS=0
					BEGIN
					INSERT INTO #MCODEINHIERARCHY
					SELECT MGCODE  ,  ITEMS	 ,[PATH]  	,PARENT ,	LEVELS ,	TYPE   FROM FN_ITEMHIERARCHY (@GROUPNAME,2)
					--SELECT @GROUPNAME
			 
					FETCH NEXT FROM GROUPCURSOR INTO @GROUPNAME
					END

					CLOSE GROUPCURSOR
					DEALLOCATE GROUPCURSOR
 
					INSERT INTO #MENUITEM_LIST (MCODE,MENUCODE,DESCA,UNIT,MGROUP,SUPCODE,MCAT,PTYPE,MANUFACTURER) SELECT B.MCODE,B.MENUCODE,B.DESCA,B.BASEUNIT,B.MGROUP,B.SUPCODE,B.MCAT,B.PTYPE,MANUFACTURER FROM (SELECT DISTINCT MGCODE FROM #MCODEINHIERARCHY) A INNER JOIN MENUITEM B WITH(NOLOCK)  ON A.MGCODE = B.MCODE WHERE B.TYPE = 'A' AND ISNULL(B.MCAT,'') LIKE @MCAT AND ISNULL(B.MANUFACTURER,'') LIKE @MANUFACTURER AND ((@PTYPE = 100 AND B.PTYPE<10) OR (@PTYPE <> 100 AND B.PTYPE = @PTYPE))
			 
				END
			ELSE
					INSERT INTO #MENUITEM_LIST (MCODE,MENUCODE,DESCA,UNIT,MGROUP,SUPCODE,MCAT,PTYPE,MANUFACTURER) SELECT B.MCODE,B.MENUCODE,B.DESCA,B.BASEUNIT,B.MGROUP,B.SUPCODE,B.MCAT,B.PTYPE,MANUFACTURER FROM DBO.Split(@MCODE ,',') A INNER JOIN MENUITEM B WITH(NOLOCK)  ON A.ITEMS = B.MCODE WHERE B.TYPE = 'A'  AND ISNULL(B.MCAT,'') LIKE @MCAT AND ISNULL(B.MANUFACTURER,'') LIKE @MANUFACTURER AND ((@PTYPE = 100 AND B.PTYPE<10) OR (@PTYPE <> 100 AND B.PTYPE = @PTYPE)) 
		END
	
	 IF OBJECT_ID('TEMPDB..#STKDETAIL') is not null drop table #STKDETAIL
        CREATE TABLE #STKDETAIL (MCODE VARCHAR(25),DESCA VARCHAR(100),BATCH VARCHAR(100), BC VARCHAR(50),CLSQTY NUMERIC(24,10),SUPCODE VARCHAR(25),SUPPLIER VARCHAR(250))

IF OBJECT_ID('TEMPDB..#WHOUSE') is not null drop table #WHOUSE
CREATE TABLE #WHOUSE (WHOUSE varchar(100))
IF @WAREHOUSE='%' 
	INSERT INTO  #WHOUSE SELECT NAME FROM RMD_WAREHOUSE WHERE ISNULL(ISVIRTUAL,0)=0 AND ISNULL(DIVISION,'') LIKE @DIV
ELSE 
	INSERT INTO #WHOUSE SELECT ITEMS FROM DBO.Split(@WAREHOUSE ,',')

--USING LOCAL PURCHASE COSTING FEATURES
----------------------------------------
IF OBJECT_ID('TEMPDB..#BATCHPRICEMASTER') is not null drop table #BATCHPRICEMASTER
CREATE TABLE #BATCHPRICEMASTER (MCODE VARCHAR(25),BATCHCODE VARCHAR(50),LANDINGCOST NUMERIC(32,18),SUPCODE VARCHAR(25))
CREATE nonclustered index idx_BATCHPRICEMASTER on #BATCHPRICEMASTER (MCODE,BATCHCODE)
IF @SHOWLCOSTFORLOCALPURCHASE = 0
	INSERT INTO #BATCHPRICEMASTER(MCODE,BATCHCODE,LANDINGCOST,SUPCODE) SELECT MCODE,BATCHCODE,LANDINGCOST,SUPCODE FROM BATCHPRICE_MASTER
ELSE
	INSERT INTO #BATCHPRICEMASTER(MCODE,BATCHCODE,LANDINGCOST,SUPCODE) SELECT MCODE,BATCHCODE,CASE WHEN ISNULL(LANDINGCOST_LOCALPURCHASE,0) <> 0 THEN ISNULL(LANDINGCOST_LOCALPURCHASE,0) ELSE LANDINGCOST END LANDINGCOST,SUPCODE FROM BATCHPRICE_MASTER

	IF @REPORTTYPE<>0
	SET @ShowDetail=0

	
IF OBJECT_ID('TEMPDB..#SGROUP') is not null drop table #SGROUP
SELECT MCODE MC,MGCODE,[MAIN GROUP],[SUB GROUP_A],[SUB GROUP_B],[SUB GROUP_C],MCATEGORY CATEGORY INTO #SGROUP FROM vwItemHeirarchy WHERE MCODE LIKE CASE WHEN @SHOWGROUPING = 1 THEN '%' ELSE '~~' END	


--VARIANTS FILTER DETAIL
--------------------------
			
			

	if @params<>'' and @params<>'%'
	begin
		IF OBJECT_ID('TEMPDB..#VARIANTS') is not null drop table #VARIANTS
		IF OBJECT_ID('TEMPDB..#table1') is not null drop table #table1
		IF OBJECT_ID('TEMPDB..#table2') is not null drop table #table2

	    --table1
	    select [KEY],value items into #table1 from (select * FROM OPENJSON(@params))A 
	           
	    --table2
	    SELECT BCODE,bd.* into #table2 FROM BARCODE B cross apply OPENJSON(b.barcodeDetails)BD
	    WHERE barcodeDetails IS  NOT NULL
	    --select * from #table1
	    --select * from #table2 
		--INSERT INTO #VARIANTS
	    Select distinct bcode INTO #VARIANTS
	    from (
	            select * From #table2  where bcode in (select bcode from #table1 where [key] in (select [key] from #table1 a where value in (select items from Split(a.items,','))))
	        ) a group by bcode having count(bcode) = (select count(*) from #table1)
	end 
	--select * from #VARIANTS
------END--------
            
     --PREPARING REPORT DATA
     -----------------------
     DECLARE @STKSUMMARY1 TABLE(MENUCODE varchar(100),DESCA varchar(500),UNIT varchar(20),OPQTY numeric(30,12), OPVALUE numeric(30,12),PURCHASEQTY numeric(30,12),PURCHASEVALUE numeric(30,12),
     PRETURNQTY numeric(30,12),PRETURNVALUE numeric(30,12),NETPURCHASEQTY numeric(30,12),NETPURCHASEVALUE numeric(30,12),PRODUCTION numeric(30,12),PRODUCTIONVALUE numeric(30,12),TRANSFERIN numeric(30,12), TRANSFERINVALUE numeric(30,12),
     STOCKIN numeric(30,12), STOCKINVALUE numeric(30,12),SALESQTY numeric(30,12),SALESVALUE numeric(30,12),SRETURNQTY numeric(30,12),SRETURNVALUE numeric(30,12),NETSALESQTY numeric(30,12), NETSALESVALUE numeric(30,12),CONSUMPTION numeric(30,12), 
     CONSUMPTIONVALUE numeric(30,12),TRANSFEROUT numeric(30,12), TRANSFEROUTVALUE numeric(30,12),STOCKOUT numeric(30,12),STOCKSETTLEMENTQTY NUMERIC(30,12),STOCKSETTLEMENTVALUE NUMERIC(30,12),STOCKOUTVALUE numeric(30,12),CLSQTY numeric(30,12),CLSVALUE numeric(30,12),MCODE varchar(20),MGROUP varchar(25),
     MCAT  varchar(100),BATCH varchar(100),SUPPLIER VARCHAR(250))

	 DECLARE @STKSUMMARY TABLE(MENUCODE varchar(100),DESCA varchar(500),UNIT varchar(20),OPQTY numeric(30,12), OPVALUE numeric(30,12),PURCHASEQTY numeric(30,12),PURCHASEVALUE numeric(30,12),
     PRETURNQTY numeric(30,12),PRETURNVALUE numeric(30,12),NETPURCHASEQTY numeric(30,12),NETPURCHASEVALUE numeric(30,12),PRODUCTION numeric(30,12),PRODUCTIONVALUE numeric(30,12),TRANSFERIN numeric(30,12), TRANSFERINVALUE numeric(30,12),
     STOCKIN numeric(30,12), STOCKINVALUE numeric(30,12),SALESQTY numeric(30,12),SALESVALUE numeric(30,12),SRETURNQTY numeric(30,12),SRETURNVALUE numeric(30,12),NETSALESQTY numeric(30,12), NETSALESVALUE numeric(30,12),CONSUMPTION numeric(30,12), 
     CONSUMPTIONVALUE numeric(30,12),TRANSFEROUT numeric(30,12), TRANSFEROUTVALUE numeric(30,12),STOCKSETTLEMENTQTY NUMERIC(30,12),STOCKSETTLEMENTVALUE NUMERIC(30,12),STOCKOUT numeric(30,12),STOCKOUTVALUE numeric(30,12),CLSQTY numeric(30,12),CLSVALUE numeric(30,12),MCODE varchar(20),MGROUP varchar(25),
     MCAT  varchar(100),BATCH varchar(100),SUPPLIER VARCHAR(250))


	--GETTING FIFO VALUE OF PTYPE = 9 ITEM (PERISHIABLE ITEMS)
	-----------------------------------------------------------
	DECLARE @FIFO_STOCK table(MCODE varchar(25),OP_RATE NUMERIC(30,12),CLS_RATE NUMERIC(30,12))
	DECLARE @FIFO_STOCK_CLOSING table(MCODE varchar(25),RATE NUMERIC(30,12))
	DECLARE @ISFOROPENING TINYINT
	SELECT @ISFOROPENING = CASE WHEN @DATE1 = BEGINDATE THEN 1 ELSE 0 END FROM PhiscalYear WHERE PhiscalID = @PHISCALID
	DECLARE @DTVL DATE
	IF @ISFOROPENING=1
		SET @DTVL = @DATE1
	ELSE
		SET @DTVL = DATEADD(DAY, -1,@DATE1)
	BEGIN
		
		IF @MCODE='%' AND @MGROUP='%' 
		SET @MCODE='%'
		ELSE
		SET @MCODE = STUFF((SELECT   ','+MCODE FROM #MENUITEM_LIST  FOR XML PATH ('')), 1, 1, '') 

		INSERT INTO @FIFO_STOCK (MCODE,OP_RATE) EXEC WSP_FIFO_STOCKVALUATION @MC = @MCODE,@DATE = @DTVL,@PHISCALID = @PHISCALID, @COMID = @COMPANYID,@ISFOROPENING = @ISFOROPENING,@SUMMARY = 1,@MGROUP='%',@PTYPE=9,@MCAT=@MCAT,@MANUFACTURER=@MANUFACTURER,@DOVALUATION = 2
		INSERT INTO @FIFO_STOCK_CLOSING(MCODE,RATE) EXEC WSP_FIFO_STOCKVALUATION @MC = @MCODE,@DATE = @DATE2,@PHISCALID = @PHISCALID, @COMID = @COMPANYID,@ISFOROPENING = 0,@SUMMARY = 1,@MGROUP='%',@PTYPE=9,@MCAT=@MCAT,@MANUFACTURER=@MANUFACTURER,@DOVALUATION = 2
		UPDATE A SET A.CLS_RATE = B.RATE FROM  @FIFO_STOCK A LEFT JOIN  @FIFO_STOCK_CLOSING B ON A.MCODE = B.MCODE
		INSERT INTO @FIFO_STOCK (MCODE,OP_RATE,CLS_RATE) SELECT A.MCODE,0 O_RATE,RATE C_RATE FROM @FIFO_STOCK_CLOSING A LEFT JOIN @FIFO_STOCK B ON A.MCODE =B.MCODE WHERE B.MCODE IS NULL
	END
	IF OBJECT_ID('TEMPDB..#DATA') is not null drop table #DATA
	CREATE TABLE #DATA (MCODE varchar(20),BATCH varchar(100),OPQTY numeric(30,12), X_OPVALUE numeric(30,12),PURCHASEQTY numeric(30,12),X_PURCHASEVALUE numeric(30,12),
     PRETURNQTY numeric(30,12),X_PRETURNVALUE numeric(30,12),NETPURCHASEQTY numeric(30,12),X_NETPURCHASEVALUE numeric(30,12),PRODUCTION numeric(30,12),X_PRODUCTIONVALUE numeric(30,12),TRANSFERIN numeric(30,12), X_TRANSFERINVALUE numeric(30,12),STOCKIN numeric(30,12), X_STOCKINVALUE numeric(30,12),SALESQTY numeric(30,12),X_SALESVALUE numeric(30,12),SRETURNQTY numeric(30,12),X_SRETURNVALUE numeric(30,12),NETSALESQTY numeric(30,12), X_NETSALESVALUE numeric(30,12),CONSUMPTION numeric(30,12),X_CONSUMPTIONVALUE numeric(30,12),TRANSFEROUT numeric(30,12), X_TRANSFEROUTVALUE numeric(30,12),STOCKSETTLEMENTQTY NUMERIC(30,12),X_STOCKSETTLEMENTVALUE NUMERIC(30,12),STOCKOUT numeric(30,12),X_STOCKOUTVALUE numeric(30,12),CLSQTY numeric(30,12))
	
	 if @params<>'' and @params<>'%'
	 	INSERT INTO #DATA
	    SELECT B.MCODE,B.BATCH,
			 SUM(CASE WHEN A.TRNDATE<@DATE1 OR A.VoucherType = 'OP' THEN  ISNULL(B.REALQTY_IN,0) -  ISNULL(B.REALQTY,0) ELSE 0 END) OPQTY,
			 SUM(CASE WHEN A.TRNDATE<@DATE1 OR A.VoucherType = 'OP' THEN (RealQty_IN - REALQTY)*B.PRATE ELSE 0 END) X_OPVALUE,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('PI','PX') THEN ISNULL(B.REALQTY_IN,0)  - ISNULL(B.REALQTY,0) ELSE 0 END) PURCHASEQTY,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('PI','PX') THEN CASE WHEN  A.VoucherType  = 'PI' THEN (B.TAXABLE + B.NONTAXABLE) ELSE (ISNULL(B.REALQTY_IN,0)  - ISNULL(B.REALQTY,0))* B.PRATE END ELSE 0 END) X_PURCHASEVALUE,			 
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType  IN ('DN','DX') THEN ISNULL(B.REALQTY,0)  - ISNULL(B.REALQTY_IN,0) ELSE 0 END) PRETURNQTY,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType  IN ('DN','DX') THEN (ISNULL(B.REALQTY,0)  - ISNULL(B.REALQTY_IN,0))* B.PRATE ELSE 0 END) X_PRETURNVALUE,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('PI','DN','PX','DX') THEN ISNULL(B.REALQTY_IN,0)  - ISNULL(B.REALQTY,0) ELSE 0 END) NETPURCHASEQTY,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('PI','DN','PX','DX') THEN (ISNULL(B.REALQTY_IN,0)  - ISNULL(B.REALQTY,0))*B.PRATE ELSE 0 END) X_NETPURCHASEVALUE,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('PD','RP') THEN ISNULL(B.REALQTY_IN,0)  ELSE 0 END) PRODUCTION,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('PD','RP') THEN ISNULL(B.REALQTY_IN,0) * B.PRATE  ELSE 0 END) X_PRODUCTIONVALUE,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType = 'TR' THEN ISNULL(B.REALQTY_IN,0)  ELSE 0 END) TRANSFERIN,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType = 'TR' THEN ISNULL(B.REALQTY_IN,0)* B.PRATE ELSE 0 END) X_TRANSFERINVALUE,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType NOT IN ('OP','PI','DX','PD','TR','RE','CN','RP') THEN ISNULL(B.REALQTY_IN,0)  ELSE 0 END) STOCKIN,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType NOT IN ('OP','PI','DX','PD','TR','RE','CN','RP') THEN ISNULL(B.REALQTY_IN,0)* B.PRATE  ELSE 0 END) X_STOCKINVALUE,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('SI','TI','RE') THEN ISNULL(B.REALQTY,0) - ISNULL(B.REALQTY_IN,0)  ELSE 0 END) SALESQTY,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('SI','TI','RE') THEN (ISNULL(B.REALQTY,0) - ISNULL(B.REALQTY_IN,0)) * B.PRATE  ELSE 0 END) X_SALESVALUE,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('CN','RR') THEN B.REALQTY_IN-ISNULL(B.REALQTY,0)  ELSE 0 END) SRETURNQTY,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('CN','RR') THEN ( B.REALQTY_IN-ISNULL(B.REALQTY,0)) * B.PRATE  ELSE 0 END) X_SRETURNVALUE,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('SI','TI','RE','CN','RR') THEN ISNULL(B.REALQTY,0)  - ISNULL(B.REALQTY_IN,0) ELSE 0 END) NETSALESQTY,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('SI','TI','RE','CN','RR') THEN (ISNULL(B.REALQTY,0)  - ISNULL(B.REALQTY_IN,0)) * B.PRATE ELSE 0 END) X_NETSALESVALUE,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('PD','RP') THEN ISNULL(B.REALQTY,0) ELSE 0 END) CONSUMPTION,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('PD','RP') THEN ISNULL(B.REALQTY,0) * B.PRATE ELSE 0 END) X_CONSUMPTIONVALUE,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType = 'TO' THEN ISNULL(B.REALQTY,0) ELSE 0 END) TRANSFEROUT,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType = 'TO' THEN ISNULL(B.REALQTY,0)*B.PRATE ELSE 0 END) X_TRANSFEROUTVALUE,
			  SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType='DM' THEN ISNULL(B.REALQTY_IN,0)-ISNULL(B.REALQTY,0) ELSE 0 END) STOCKSETTLEMENTQTY,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType='DM' THEN (ISNULL(B.REALQTY_IN,0)-ISNULL(B.REALQTY,0))*B.PRATE ELSE 0 END) X_STOCKSETTLEMENTVALUE,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType NOT IN ('OP','SI','TI','RR','PX','PD','DN','TO','RP') THEN ISNULL(B.REALQTY,0) ELSE 0 END) STOCKOUT,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType NOT IN ('OP','SI','TI','RR','PX','PD','DN','TO','RP') THEN ISNULL(B.REALQTY,0)* B.PRATE ELSE 0 END) X_STOCKOUTVALUE,
			 SUM(REALQTY_IN) - SUM(REALQTY) CLSQTY
			 FROM RMD_TRNMAIN A WITH(NOLOCK)  INNER JOIN RMD_TRNPROD B WITH(NOLOCK)  ON A.VCHRNO = B.VCHRNO AND A.DIVISION = B.DIVISION AND A.PhiscalID = B.PhiscalID
			 INNER JOIN #MENUITEM_LIST C ON B.MCODE = C.MCODE 
			 INNER JOIN #WHOUSE D ON ISNULL(B.WAREHOUSE,'') = D.WHOUSE
			 INNER JOIN #VARIANTS V ON v.bcode=b.bc
			 WHERE TRNDATE BETWEEN @BDATE AND @DATE2  AND A.PHISCALID = @PHISCALID 
			 GROUP BY B.MCODE,B.BATCH
	ELSE
		INSERT INTO #DATA
	    SELECT B.MCODE,B.BATCH,
			 SUM(CASE WHEN A.TRNDATE<@DATE1 OR A.VoucherType = 'OP' THEN  ISNULL(B.REALQTY_IN,0) -  ISNULL(B.REALQTY,0) ELSE 0 END) OPQTY,
			 SUM(CASE WHEN A.TRNDATE<@DATE1 OR A.VoucherType = 'OP' THEN (RealQty_IN - REALQTY)*B.PRATE ELSE 0 END) X_OPVALUE,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('PI','PX') THEN ISNULL(B.REALQTY_IN,0)  - ISNULL(B.REALQTY,0) ELSE 0 END) PURCHASEQTY,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('PI','PX') THEN CASE WHEN  A.VoucherType  = 'PI' THEN (B.TAXABLE + B.NONTAXABLE) ELSE (ISNULL(B.REALQTY_IN,0)  - ISNULL(B.REALQTY,0))* B.PRATE END ELSE 0 END) X_PURCHASEVALUE,			 
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType  IN ('DN','DX') THEN ISNULL(B.REALQTY,0)  - ISNULL(B.REALQTY_IN,0) ELSE 0 END) PRETURNQTY,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType  IN ('DN','DX') THEN (ISNULL(B.REALQTY,0)  - ISNULL(B.REALQTY_IN,0))* B.PRATE ELSE 0 END) X_PRETURNVALUE,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('PI','DN','PX','DX') THEN ISNULL(B.REALQTY_IN,0)  - ISNULL(B.REALQTY,0) ELSE 0 END) NETPURCHASEQTY,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('PI','DN','PX','DX') THEN (ISNULL(B.REALQTY_IN,0)  - ISNULL(B.REALQTY,0))*B.PRATE ELSE 0 END) X_NETPURCHASEVALUE,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('PD','RP') THEN ISNULL(B.REALQTY_IN,0)  ELSE 0 END) PRODUCTION,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('PD','RP') THEN ISNULL(B.REALQTY_IN,0) * B.PRATE  ELSE 0 END) X_PRODUCTIONVALUE,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType = 'TR' THEN ISNULL(B.REALQTY_IN,0)  ELSE 0 END) TRANSFERIN,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType = 'TR' THEN ISNULL(B.REALQTY_IN,0)* B.PRATE ELSE 0 END) X_TRANSFERINVALUE,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType NOT IN ('OP','PI','DX','PD','TR','RE','CN','RP') THEN ISNULL(B.REALQTY_IN,0)  ELSE 0 END) STOCKIN,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType NOT IN ('OP','PI','DX','PD','TR','RE','CN','RP') THEN ISNULL(B.REALQTY_IN,0)* B.PRATE  ELSE 0 END) X_STOCKINVALUE,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('SI','TI','RE') THEN ISNULL(B.REALQTY,0) - ISNULL(B.REALQTY_IN,0)  ELSE 0 END) SALESQTY,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('SI','TI','RE') THEN (ISNULL(B.REALQTY,0) - ISNULL(B.REALQTY_IN,0)) * B.PRATE  ELSE 0 END) X_SALESVALUE,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('CN','RR') THEN B.REALQTY_IN-ISNULL(B.REALQTY,0)  ELSE 0 END) SRETURNQTY,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('CN','RR') THEN ( B.REALQTY_IN-ISNULL(B.REALQTY,0)) * B.PRATE  ELSE 0 END) X_SRETURNVALUE,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('SI','TI','RE','CN','RR') THEN ISNULL(B.REALQTY,0)  - ISNULL(B.REALQTY_IN,0) ELSE 0 END) NETSALESQTY,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('SI','TI','RE','CN','RR') THEN (ISNULL(B.REALQTY,0)  - ISNULL(B.REALQTY_IN,0)) * B.PRATE ELSE 0 END) X_NETSALESVALUE,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('PD','RP') THEN ISNULL(B.REALQTY,0) ELSE 0 END) CONSUMPTION,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType IN ('PD','RP') THEN ISNULL(B.REALQTY,0) * B.PRATE ELSE 0 END) X_CONSUMPTIONVALUE,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType = 'TO' THEN ISNULL(B.REALQTY,0) ELSE 0 END) TRANSFEROUT,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType = 'TO' THEN ISNULL(B.REALQTY,0)*B.PRATE ELSE 0 END) X_TRANSFEROUTVALUE,
			  SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType='DM' THEN ISNULL(B.REALQTY_IN,0)-ISNULL(B.REALQTY,0) ELSE 0 END) STOCKSETTLEMENTQTY,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType='DM' THEN (ISNULL(B.REALQTY_IN,0)-ISNULL(B.REALQTY,0))*B.PRATE ELSE 0 END) X_STOCKSETTLEMENTVALUE,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType NOT IN ('OP','SI','TI','RR','PX','PD','DN','TO','RP') THEN ISNULL(B.REALQTY,0) ELSE 0 END) STOCKOUT,
			 SUM(CASE WHEN A.TRNDATE>=@DATE1 AND A.VoucherType NOT IN ('OP','SI','TI','RR','PX','PD','DN','TO','RP') THEN ISNULL(B.REALQTY,0)* B.PRATE ELSE 0 END) X_STOCKOUTVALUE,
			 SUM(REALQTY_IN) - SUM(REALQTY) CLSQTY
			 FROM RMD_TRNMAIN A WITH(NOLOCK)  INNER JOIN RMD_TRNPROD B WITH(NOLOCK)  ON A.VCHRNO = B.VCHRNO AND A.DIVISION = B.DIVISION AND A.PhiscalID = B.PhiscalID
			 INNER JOIN #MENUITEM_LIST C ON B.MCODE = C.MCODE 
			 INNER JOIN #WHOUSE D ON ISNULL(B.WAREHOUSE,'') = D.WHOUSE			 
			 WHERE TRNDATE BETWEEN @BDATE AND @DATE2  AND A.PHISCALID = @PHISCALID 
			 GROUP BY B.MCODE,B.BATCH


			 insert into @STKSUMMARY1            
			 SELECT ML.MENUCODE,ML.DESCA,ML.UNIT,
			 SUM(OPQTY)OPQTY, CASE WHEN ML.PTYPE = 9 THEN SUM(A.OPQTY * ISNULL(C.OP_RATE,0)) ELSE SUM(OPQTY * LANDINGCOST) END OPVALUE,
			 SUM(PURCHASEQTY)PURCHASEQTY, CASE WHEN ML.PTYPE = 9 THEN SUM(X_PURCHASEVALUE) ELSE SUM(PURCHASEQTY * LANDINGCOST) END PURCHASEVALUE,
			 SUM(PRETURNQTY)PRETURNQTY, CASE WHEN ML.PTYPE = 9 THEN SUM(X_PRETURNVALUE) ELSE SUM(PRETURNQTY * LANDINGCOST) END PRETURNVALUE,
			 SUM(NETPURCHASEQTY)NETPURCHASEQTY, CASE WHEN ML.PTYPE = 9 THEN SUM(X_NETPURCHASEVALUE) ELSE (SUM(PURCHASEQTY * LANDINGCOST)-SUM(PRETURNQTY * LANDINGCOST)) END NETPURCHASEVALUE,
			 SUM(PRODUCTION)PRODUCTION, CASE WHEN ML.PTYPE = 9 THEN SUM(X_PRODUCTIONVALUE) ELSE SUM(PRODUCTION * LANDINGCOST) END PRODUCTIONVALUE,
			 SUM(TRANSFERIN)TRANSFERIN, CASE WHEN ML.PTYPE = 9 THEN SUM(X_TRANSFERINVALUE) ELSE SUM(TRANSFERIN * LANDINGCOST) END TRANSFERINVALUE,
			 SUM(STOCKIN)STOCKIN, CASE WHEN ML.PTYPE = 9 THEN SUM(X_STOCKINVALUE) ELSE SUM(STOCKIN * LANDINGCOST) END STOCKINVALUE,
			 SUM(SALESQTY)SALESQTY, CASE WHEN ML.PTYPE = 9 THEN SUM(X_SALESVALUE) ELSE SUM(SALESQTY * LANDINGCOST) END SALESVALUE,
			 SUM(SRETURNQTY)SRETURNQTY, CASE WHEN ML.PTYPE = 9 THEN SUM(X_SRETURNVALUE) ELSE SUM(SRETURNQTY * LANDINGCOST) END SRETURNVALUE,
			 SUM(NETSALESQTY)NETSALESQTY, CASE WHEN ML.PTYPE = 9 THEN SUM(X_NETSALESVALUE) ELSE (SUM(SALESQTY * LANDINGCOST) -  SUM(SRETURNQTY * LANDINGCOST)) END  NETSALESVALUE,
			 SUM(CONSUMPTION)CONSUMPTION, CASE WHEN ML.PTYPE = 9 THEN SUM(X_CONSUMPTIONVALUE) ELSE SUM(CONSUMPTION * LANDINGCOST) END CONSUMPTIONVALUE,
			 SUM(TRANSFEROUT)TRANSFEROUT, CASE WHEN ML.PTYPE = 9 THEN SUM(X_TRANSFEROUTVALUE) ELSE SUM(CONSUMPTION * LANDINGCOST) END TRANSFEROUTVALUE,
			 SUM(STOCKSETTLEMENTQTY) STOCKSETTLEMENTQTY, CASE WHEN ML.PTYPE=9 THEN SUM(X_STOCKSETTLEMENTVALUE) ELSE SUM(STOCKSETTLEMENTQTY* LANDINGCOST) END STOCKSETTLEMENTVALUE,
			 SUM(STOCKOUT)STOCKOUT,  CASE WHEN ML.PTYPE = 9 THEN SUM(X_STOCKOUTVALUE) ELSE SUM(STOCKOUT * LANDINGCOST) END  STOCKOUTVALUE,
			 SUM(CLSQTY)CLSQTY,CASE WHEN ML.PTYPE = 9 THEN SUM(CLSQTY * ISNULL(C.CLS_RATE,0)) ELSE SUM(CLSQTY * LANDINGCOST) END CLSVALUE,
			 A.MCODE,ML.MGROUP,ML.MCAT,CASE WHEN @SHOWBATCHWISESTOCK = 1 THEN A.BATCH ELSE '' END BATCH,CASE WHEN @SHOWBATCHWISESTOCK=1 THEN X.ACNAME ELSE '' END ACNAME
			 FROM #DATA A JOIN #MENUITEM_LIST ML ON A.MCODE = ML.MCODE LEFT JOIN #BATCHPRICEMASTER B ON A.MCODE = B.MCODE AND A.BATCH = B.BATCHCODE 
			 LEFT JOIN @FIFO_STOCK C ON A.MCODE = C.MCODE 
			 LEFT JOIN RMD_ACLIST X WITH(NOLOCK)  ON ISNULL(ISNULL(B.SUPCODE,ML.SUPCODE),'')= X.ACID
			 WHERE ISNULL(ISNULL(B.SUPCODE,ML.SUPCODE),'') LIKE @SUPCODE
			 GROUP BY ML.MENUCODE,ML.DESCA,ML.UNIT,A.MCODE,ML.MGROUP,ML.MCAT,CASE WHEN @SHOWBATCHWISESTOCK = 1 THEN A.BATCH ELSE '' END, ML.PTYPE,CASE WHEN @SHOWBATCHWISESTOCK=1 THEN X.ACNAME ELSE '' END
			 HAVING ((@ReportMode = 1 AND SUM(CLSQTY) <> 0) OR (@ReportMode = 2 AND SUM(CLSQTY) < 0) OR (@ReportMode = 3 AND SUM(CLSQTY) = 0) OR  (@ReportMode = 0 AND SUM(CLSQTY) < 1000000000)) 

--SELECT * FROM @STKSUMMARY1

	IF @ShowAltUnitStockReport = 0
		INSERT INTO @STKSUMMARY SELECT * FROM @STKSUMMARY1
	ELSE
		BEGIN
			IF OBJECT_ID('TEMPDB..#ALTUNIT') is not null drop table #ALTUNIT
			SELECT MCODE,ALTUNIT,CONFACTOR INTO #ALTUNIT FROM 
			(SELECT ROW_NUMBER() OVER (Partition by A.MCODE ORDER BY A.MCODE,A.STAMP)SN, A.MCODE,A.ALTUNIT,ISNULL(A.CONFACTOR,0) CONFACTOR FROM MULTIALTUNIT A INNER JOIN MENUITEM B ON A.MCODE = B.MCODE AND A.ALTUNIT <> B.BASEUNIT WHERE ISNULL(B.ISACTIVE,1) = 1) A WHERE SN = 1

			INSERT INTO @STKSUMMARY 
			SELECT A.MENUCODE,A.DESCA,ISNULL(B.ALTUNIT,A.UNIT)UNIT,
			CASE WHEN B.ALTUNIT IS NOT NULL THEN ROUND(A.OPQTY/B.CONFACTOR,3) ELSE A.OPQTY END OPQTY, OPVALUE,
			CASE WHEN B.ALTUNIT IS NOT NULL THEN ROUND(A.PURCHASEQTY/B.CONFACTOR,3) ELSE A.PURCHASEQTY END PURCHASEQTY, PURCHASEVALUE,
			CASE WHEN B.ALTUNIT IS NOT NULL THEN ROUND(A.PRETURNQTY/B.CONFACTOR,3) ELSE A.PRETURNQTY END PRETURNQTY, PRETURNVALUE,
			CASE WHEN B.ALTUNIT IS NOT NULL THEN ROUND(A.NETPURCHASEQTY/B.CONFACTOR,3) ELSE A.NETPURCHASEQTY END NETPURCHASEQTY, NETPURCHASEVALUE,
			CASE WHEN B.ALTUNIT IS NOT NULL THEN ROUND(A.PRODUCTION/B.CONFACTOR,3) ELSE A.PRODUCTION END PRODUCTION, PRODUCTIONVALUE,
			CASE WHEN B.ALTUNIT IS NOT NULL THEN ROUND(A.TRANSFERIN/B.CONFACTOR,3) ELSE A.TRANSFERIN END TRANSFERIN, TRANSFERINVALUE,
			CASE WHEN B.ALTUNIT IS NOT NULL THEN ROUND(A.STOCKIN/B.CONFACTOR,3) ELSE A.STOCKIN END STOCKIN, STOCKINVALUE,
			CASE WHEN B.ALTUNIT IS NOT NULL THEN ROUND(A.SALESQTY/B.CONFACTOR,3) ELSE A.SALESQTY END SALESQTY, SALESVALUE,
			CASE WHEN B.ALTUNIT IS NOT NULL THEN ROUND(A.SRETURNQTY/B.CONFACTOR,3) ELSE A.SRETURNQTY END SRETURNQTY, SRETURNVALUE,
			CASE WHEN B.ALTUNIT IS NOT NULL THEN ROUND(A.NETSALESQTY/B.CONFACTOR,3) ELSE A.NETSALESQTY END NETSALESQTY, NETSALESVALUE,
			CASE WHEN B.ALTUNIT IS NOT NULL THEN ROUND(A.CONSUMPTION/B.CONFACTOR,3) ELSE A.CONSUMPTION END CONSUMPTION, CONSUMPTIONVALUE,
			CASE WHEN B.ALTUNIT IS NOT NULL THEN ROUND(A.TRANSFEROUT/B.CONFACTOR,3) ELSE A.TRANSFEROUT END TRANSFEROUT, TRANSFEROUTVALUE,
			CASE WHEN B.ALTUNIT IS NOT NULL THEN ROUND(A.STOCKSETTLEMENTQTY/B.CONFACTOR,3) ELSE A.STOCKSETTLEMENTQTY END STOCKSETTLEMENTQTY, STOCKSETTLEMENTVALUE,
			CASE WHEN B.ALTUNIT IS NOT NULL THEN ROUND(A.STOCKOUT/B.CONFACTOR,3) ELSE A.STOCKOUT END STOCKOUT, STOCKOUTVALUE,
			CASE WHEN B.ALTUNIT IS NOT NULL THEN ROUND(A.CLSQTY/B.CONFACTOR,3) ELSE A.CLSQTY END CLSQTY, CLSVALUE,
			A.MCODE,A.MGROUP,A.MCAT,BATCH,A.SUPPLIER FROM @STKSUMMARY1 A LEFT JOIN #ALTUNIT B ON A.MCODE =B.MCODE

		END

		
		 IF @ShowDetail =1  
			BEGIN  
				IF OBJECT_ID('TEMPDB..#MITEM') is not null drop table #MITEM  
				SELECT DISTINCT A.MCODE,B.DESCA,B.SUPCODE INTO #MITEM FROM @STKSUMMARY A INNER JOIN MENUITEM B WITH(NOLOCK)  ON A.MCODE = B.MCODE WHERE B.PTYPE IN (SELECT PTYPEID FROM PTYPE WHERE NATURETYPE = 1) AND A.CLSQTY >0  

				INSERT INTO #STKDETAIL (MCODE,DESCA,BATCH,BC,CLSQTY,SUPCODE,SUPPLIER)  
				SELECT A.*,X.ACNAME  FROM   
				(  
				SELECT B.MCODE,C.DESCA,B.BATCH,ISNULL(B.BC,'')BC, SUM(REALQTY_IN) - SUM(REALQTY) CLSQTY,C.SUPCODE   
				FROM RMD_TRNMAIN A WITH(NOLOCK)  INNER JOIN RMD_TRNPROD B WITH(NOLOCK)  ON A.VCHRNO = B.VCHRNO AND A.DIVISION = B.DIVISION AND A.PhiscalID = B.PhiscalID  
				INNER JOIN #MITEM C ON B.MCODE = C.MCODE INNER JOIN #WHOUSE D ON ISNULL(B.WAREHOUSE,'') = D.WHOUSE     
				WHERE A.TRNDATE BETWEEN @DATE1 AND @DATE2   
				GROUP BY B.MCODE,C.SUPCODE,B.BATCH,C.DESCA,ISNULL(B.BC,'') HAVING SUM(REALQTY_IN) - SUM(REALQTY) <> 0  
				) A LEFT JOIN BATCHPRICE_MASTER B WITH(NOLOCK)  ON A.MCODE = B.MCODE AND A.BATCH = B.BATCHCODE 
				LEFT JOIN RMD_ACLIST X WITH(NOLOCK)  ON ISNULL(B.SUPCODE,A.SUPCODE)=X.ACID
				WHERE ISNULL(B.SUPCODE,A.SUPCODE) LIKE @SUPCODE AND BC <> ''  
				GROUP BY X.ACNAME,A.MCODE,DESCA,BATCH,BC,CLSQTY,A.SUPCODE
			END  

			--SELECT * FROM #STKDETAIL

--DISPLAYING REPORT OUTPUT
--------------------------
IF @REPORTTYPE = 0		--Item Wise
	BEGIN
		SELECT MENUCODE,DESCA,UNIT,BARCODE,OPQTY, FORMAT(OP_RATE,'N2')OP_RATE, FORMAT(OPVALUE,'N2') OPVALUE,
		PURCHASEQTY, FORMAT(PURCHASEVALUE,'N2')PURCHASEVALUE,PRETURNQTY,FORMAT(PRETURNVALUE,'N2')PRETURNVALUE,NETPURCHASEQTY,FORMAT(NETPURCHASEVALUE,'N2')NETPURCHASEVALUE,PRODUCTION,FORMAT(PRODUCTIONVALUE,'N2')PRODUCTIONVALUE,TRANSFERIN,FORMAT(TRANSFERINVALUE,'N2')TRANSFERINVALUE,STOCKIN,FORMAT(STOCKINVALUE,'N2')STOCKINVALUE,
		SALESQTY,FORMAT(SALESVALUE,'N2')SALESVALUE,SRETURNQTY,FORMAT(SRETURNVALUE,'N2')SRETURNVALUE,NETSALESQTY,FORMAT(NETSALESVALUE,'N2')NETSALESVALUE,CONSUMPTION,FORMAT(CONSUMPTIONVALUE,'N2')CONSUMPTIONVALUE,TRANSFEROUT,FORMAT(TRANSFEROUTVALUE,'N2')TRANSFEROUTVALUE,STOCKSETTLEMENTQTY, FORMAT(STOCKSETTLEMENTVALUE,'N2') STOCKSETTLEMENTVALUE,STOCKOUT,FORMAT(STOCKOUTVALUE,'N2')STOCKOUTVALUE,
		
		CLSQTY,FORMAT(CLS_RATE,'N2') CLS_RATE,FORMAT(CLSVALUE,'N2')CLSVALUE,MCODE,'R' FFLG,BATCH,B.[MAIN GROUP],B.[SUB GROUP_A], B.[SUB GROUP_B],B.[SUB GROUP_C],B.CATEGORY	,A.SUPPLIER
		FROM 
		( 
		SELECT MENUCODE,DESCA,UNIT,NULL BARCODE,OPQTY,CASE WHEN OPQTY = 0 THEN 0 ELSE OPVALUE/OPQTY END OP_RATE,OPVALUE,PURCHASEQTY,PURCHASEVALUE,PRETURNQTY,PRETURNVALUE,NETPURCHASEQTY,NETPURCHASEVALUE,PRODUCTION,PRODUCTIONVALUE,TRANSFERIN,TRANSFERINVALUE,
	STOCKIN,STOCKINVALUE,SALESQTY,SALESVALUE,SRETURNQTY,SRETURNVALUE,NETSALESQTY,NETSALESVALUE,CONSUMPTION,CONSUMPTIONVALUE,TRANSFEROUT,TRANSFEROUTVALUE,
	STOCKSETTLEMENTQTY,STOCKSETTLEMENTVALUE,STOCKOUT,STOCKOUTVALUE,CLSQTY,CASE WHEN CLSQTY = 0 THEN 0 ELSE CLSVALUE/CLSQTY END CLS_RATE,CLSVALUE,MCODE,'A' FLG,'R' FFLG,DESCA + MCODE ITEM,BATCH,SUPPLIER FROM	@STKSUMMARY 

		UNION ALL

		SELECT NULL MENUCODE,NULL DESCA,NULL UNIT, BC,NULL OPQTY,NULL  OP_RATE,NULL OPVALUE,NULL PURCHASEQTY,NULL PURCHASEVALUE,NULL PRETURNQTY,NULL PRETURNVALUE,NULL NETPURCHASEQTY,NULL NETPURCHASEVALUE,NULL PRODUCTION,NULL PRODUCTIONVALUE,NULL TRANSFERIN,NULL TRANSFERINVALUE,
	NULL STOCKIN,NULL STOCKINVALUE,NULL SALESQTY,NULL SALESVALUE,NULL SRETURNQTY,NULL SRETURNVALUE,NULL NETSALESQTY,NULL NETSALESVALUE,NULL CONSUMPTION,NULL CONSUMPTIONVALUE,NULL TRANSFEROUT,NULL TRANSFEROUTVALUE,
	NULL STOCKSETTLEMENTQTY,NULL STOCKSETTLEMENTVALUE,NULL STOCKOUT,NULL STOCKOUTVALUE,NULL CLSQTY,NULL CLS_RATE,NULL CLSVALUE,NULL MCODE,'B' FLG,'I' FFLG,DESCA + MCODE ITEM,NULL BATCH,NULL SUPPLIER FROM #STKDETAIL WHERE @ShowDetail =1

		)A LEFT JOIN #SGROUP B ON A.MCODE = B.MC 
		ORDER BY ITEM,FLG

		SELECT NULL MENUCODE,'TOTAL >>' DESCA,NULL,SUM(OPQTY)OPQTY, NULL OP_RATE, FORMAT(SUM(OPVALUE),'N2') OPVALUE,
		SUM(PURCHASEQTY)PURCHASEQTY, FORMAT(SUM(PURCHASEVALUE),'N2')PURCHASEVALUE,SUM(PRETURNQTY)PRETURNQTY,FORMAT(SUM(PRETURNVALUE),'N2')PRETURNVALUE,SUM(NETPURCHASEQTY)NETPURCHASEQTY,FORMAT(SUM(NETPURCHASEVALUE),'N2')NETPURCHASEVALUE,SUM(PRODUCTION)PRODUCTION,FORMAT(SUM(PRODUCTIONVALUE),'N2')PRODUCTIONVALUE,SUM(TRANSFERIN)TRANSFERIN,FORMAT(SUM(TRANSFERINVALUE),'N2')TRANSFERINVALUE,SUM(STOCKIN)STOCKIN,FORMAT(SUM(STOCKINVALUE),'N2')STOCKINVALUE,
		SUM(SALESQTY)SALESQTY,FORMAT(SUM(SALESVALUE),'N2')SALESVALUE,SUM(SRETURNQTY)SRETURNQTY,FORMAT(SUM(SRETURNVALUE),'N2')SRETURNVALUE,SUM(NETSALESQTY)NETSALESQTY,FORMAT(SUM(NETSALESVALUE),'N2')NETSALESVALUE,SUM(CONSUMPTION)CONSUMPTION,FORMAT(SUM(CONSUMPTIONVALUE),'N2')CONSUMPTIONVALUE,SUM(TRANSFEROUT)TRANSFEROUT,FORMAT(SUM(TRANSFEROUTVALUE),'N2')TRANSFEROUTVALUE,SUM(STOCKSETTLEMENTQTY) STOCKSETTLEMENTQTY, FORMAT(SUM(STOCKSETTLEMENTVALUE),'N2') STOCKSETTLEMENTVALUE,SUM(STOCKOUT)STOCKOUT,FORMAT(SUM(STOCKOUTVALUE),'N2')STOCKOUTVALUE,
		SUM(CLSQTY)CLSQTY,NULL CLS_RATE,FORMAT(SUM(CLSVALUE),'N2')CLSVALUE,NULL MCODE,'B' FFLG FROM @STKSUMMARY A		
	END

ELSE IF @REPORTTYPE = 1		-- ITEM GROUP WISE
BEGIN
	IF @ShowItemInGroupWiseReport = 0		-- ITEM GROUP WISE REPORT
		BEGIN
			SELECT B.MENUCODE,ISNULL(B.DESCA,'N/A')DESCA,SUM(OPQTY)OPQTY, FORMAT(SUM(OPVALUE),'N2') OPVALUE,
			SUM(PURCHASEQTY)PURCHASEQTY, FORMAT(SUM(PURCHASEVALUE),'N2')PURCHASEVALUE,SUM(PRETURNQTY)PRETURNQTY,FORMAT(SUM(PRETURNVALUE),'N2')PRETURNVALUE,SUM(NETPURCHASEQTY)NETPURCHASEQTY,FORMAT(SUM(NETPURCHASEVALUE),'N2')NETPURCHASEVALUE,SUM(PRODUCTION)PRODUCTION,FORMAT(SUM(PRODUCTIONVALUE),'N2')PRODUCTIONVALUE,SUM(TRANSFERIN)TRANSFERIN,FORMAT(SUM(TRANSFERINVALUE),'N2')TRANSFERINVALUE,SUM(STOCKIN)STOCKIN,FORMAT(SUM(STOCKINVALUE),'N2')STOCKINVALUE,
			SUM(SALESQTY)SALESQTY,FORMAT(SUM(SALESVALUE),'N2')SALESVALUE,SUM(SRETURNQTY)SRETURNQTY,FORMAT(SUM(SRETURNVALUE),'N2')SRETURNVALUE,SUM(NETSALESQTY)NETSALESQTY,FORMAT(SUM(NETSALESVALUE),'N2')NETSALESVALUE,SUM(CONSUMPTION)CONSUMPTION,FORMAT(SUM(CONSUMPTIONVALUE),'N2')CONSUMPTIONVALUE,SUM(TRANSFEROUT)TRANSFEROUT,FORMAT(SUM(TRANSFEROUTVALUE),'N2')TRANSFEROUTVALUE,SUM(STOCKSETTLEMENTQTY) STOCKSETTLEMENTQTY, FORMAT(SUM(STOCKSETTLEMENTVALUE),'N2') STOCKSETTLEMENTVALUE,SUM(STOCKOUT)STOCKOUT,FORMAT(SUM(STOCKOUTVALUE),'N2')STOCKOUTVALUE,
			SUM(CLSQTY)CLSQTY,FORMAT(SUM(CLSVALUE),'N2')CLSVALUE,B.MCODE,'R' FFLG FROM @STKSUMMARY A LEFT JOIN MENUITEM B ON ISNULL(A.MGROUP,'') = B.MCODE
			GROUP BY B.MENUCODE,ISNULL(B.DESCA,'N/A'),B.MCODE ORDER BY ISNULL(B.DESCA,'N/A')

			SELECT NULL MENUCODE,'TOTAL >>' DESCA,SUM(OPQTY)OPQTY, NULL OP_RATE, FORMAT(SUM(OPVALUE),'N2') OPVALUE,
			SUM(PURCHASEQTY)PURCHASEQTY, FORMAT(SUM(PURCHASEVALUE),'N2')PURCHASEVALUE,SUM(PRETURNQTY)PRETURNQTY,FORMAT(SUM(PRETURNVALUE),'N2')PRETURNVALUE,SUM(NETPURCHASEQTY)NETPURCHASEQTY,FORMAT(SUM(NETPURCHASEVALUE),'N2')NETPURCHASEVALUE,SUM(PRODUCTION)PRODUCTION,FORMAT(SUM(PRODUCTIONVALUE),'N2')PRODUCTIONVALUE,SUM(TRANSFERIN)TRANSFERIN,FORMAT(SUM(TRANSFERINVALUE),'N2')TRANSFERINVALUE,SUM(STOCKIN)STOCKIN,FORMAT(SUM(STOCKINVALUE),'N2')STOCKINVALUE,
			SUM(SALESQTY)SALESQTY,FORMAT(SUM(SALESVALUE),'N2')SALESVALUE,SUM(SRETURNQTY)SRETURNQTY,FORMAT(SUM(SRETURNVALUE),'N2')SRETURNVALUE,SUM(NETSALESQTY)NETSALESQTY,FORMAT(SUM(NETSALESVALUE),'N2')NETSALESVALUE,SUM(CONSUMPTION)CONSUMPTION,FORMAT(SUM(CONSUMPTIONVALUE),'N2')CONSUMPTIONVALUE,SUM(TRANSFEROUT)TRANSFEROUT,FORMAT(SUM(TRANSFEROUTVALUE),'N2')TRANSFEROUTVALUE,SUM(STOCKOUT)STOCKOUT,FORMAT(SUM(STOCKOUTVALUE),'N2')STOCKOUTVALUE,SUM(STOCKSETTLEMENTQTY) STOCKSETTLEMENTQTY, FORMAT(SUM(STOCKSETTLEMENTVALUE),'N2') STOCKSETTLEMENTVALUE,
			SUM(CLSQTY)CLSQTY,FORMAT(SUM(CLSVALUE),'N2')CLSVALUE,NULL MCODE,'B' FFLG FROM @STKSUMMARY A
		END
	ELSE IF @ShowItemInGroupWiseReport = 1		-- SHOW ITEM IN ITEM GROUP WISE REPORT	


	IF OBJECT_ID('TEMPDB..#TREE') IS NOT NULL DROP TABLE #TREE

			SELECT A.ITEMS,B.MENUCODE,A.MGCODE,B.UNIT,A.TYPE,ISNULL(OPQTY,0) OPQTY,ISNULL(CASE WHEN OPQTY = 0 THEN 0 ELSE OPVALUE/OPQTY END,0) OP_RATE, ISNULL(OPVALUE,0) OPVALUE,
			ISNULL(PURCHASEQTY,0) PURCHASEQTY, ISNULL(PURCHASEVALUE,0)PURCHASEVALUE,ISNULL(PRETURNQTY,0) PRETURNQTY,ISNULL(PRETURNVALUE ,0)PRETURNVALUE,ISNULL(NETPURCHASEQTY ,0)NETPURCHASEQTY,ISNULL(NETPURCHASEVALUE,0) NETPURCHASEVALUE,ISNULL(PRODUCTION,0) PRODUCTION,ISNULL(PRODUCTIONVALUE,0) PRODUCTIONVALUE,ISNULL(TRANSFERIN,0) TRANSFERIN,ISNULL(TRANSFERINVALUE,0) TRANSFERINVALUE,ISNULL(STOCKIN,0) STOCKIN,ISNULL(STOCKINVALUE,0) STOCKINVALUE,
	ISNULL(SALESQTY,0) SALESQTY,ISNULL(SALESVALUE,0) SALESVALUE,ISNULL(SRETURNQTY,0) SRETURNQTY,ISNULL(SRETURNVALUE,0) SRETURNVALUE,ISNULL(NETSALESQTY,0) NETSALESQTY,ISNULL(NETSALESVALUE,0) NETSALESVALUE,ISNULL(CONSUMPTION,0) CONSUMPTION,ISNULL(CONSUMPTIONVALUE,0) CONSUMPTIONVALUE,ISNULL(TRANSFEROUT,0) TRANSFEROUT ,ISNULL(TRANSFEROUTVALUE,0) TRANSFEROUTVALUE,ISNULL(STOCKSETTLEMENTQTY,0) STOCKSETTLEMENTQTY,ISNULL(STOCKSETTLEMENTVALUE,0) STOCKSETTLEMENTVALUE,ISNULL(STOCKOUT,0) STOCKOUT,ISNULL(STOCKOUTVALUE,0) STOCKOUTVALUE,ISNULL(CLSQTY,0) CLSQTY,ISNULL(CASE WHEN CLSQTY = 0 THEN 0 ELSE CLSVALUE/CLSQTY END ,0)CLS_RATE,ISNULL(CLSVALUE,0) CLSVALUE,B.MCODE,A.LEVELS 	,A.[PATH] ,A.PARENT,B.BATCH,B.SUPPLIER INTO #TREE 
			FROM (SELECT DISTINCT MGCode	,ITEMS	,[PATH]	,PARENT,	LEVELS,	TYPE FROM #MCODEINHIERARCHY)  A  LEFT JOIN @STKSUMMARY B ON A.MGCODE = B.MCODE 
		--	--SUMMING GROUP
		--	-----------------
		DECLARE @LVL INT
		select @LVL=MAX(LEVELS) from #TREE 

		WHILE @lvl > 0
			BEGIN
				UPDATE A SET A.OPQTY = B.OPQTY,A.OPVALUE = B.OPVALUE,
				A.PURCHASEQTY= B.PURCHASEQTY, A.PURCHASEVALUE= B.PURCHASEVALUE,A.PRETURNQTY= B.PRETURNQTY,A.PRETURNVALUE= B.PRETURNVALUE,A.NETPURCHASEQTY= B.NETPURCHASEQTY,A.NETPURCHASEVALUE= B.NETPURCHASEVALUE,A.PRODUCTION= B.PRODUCTION,A.PRODUCTIONVALUE= B.PRODUCTIONVALUE,A.TRANSFERIN= B.TRANSFERIN,
				A.TRANSFERINVALUE= B.TRANSFERINVALUE,A.STOCKIN= B.STOCKIN,A.STOCKINVALUE= B.STOCKINVALUE,A.SALESQTY= B.SALESQTY,A.SALESVALUE= B.SALESVALUE,A.SRETURNQTY= B.SRETURNQTY,A.SRETURNVALUE= B.SRETURNVALUE,
				A.NETSALESQTY= B.NETSALESQTY,A.NETSALESVALUE= B.NETSALESVALUE,A.CONSUMPTION= B.CONSUMPTION,A.CONSUMPTIONVALUE= B.CONSUMPTIONVALUE,A.TRANSFEROUT= B.TRANSFEROUT,A.TRANSFEROUTVALUE= B.TRANSFEROUTVALUE,
				A.STOCKSETTLEMENTQTY=B.STOCKSETTLEMENTQTY, A.STOCKSETTLEMENTVALUE=B.STOCKSETTLEMENTVALUE,
				A.STOCKOUT= B.STOCKOUT,A.STOCKOUTVALUE= B.STOCKOUTVALUE,A.CLSQTY= B.CLSQTY,A.CLSVALUE= B.CLSVALUE
				FROM #TREE A INNER JOIN 
				(
				SELECT PARENT,SUM(OPQTY) OPQTY, SUM(OPVALUE) OPVALUE,
					SUM(PURCHASEQTY) PURCHASEQTY, SUM(PURCHASEVALUE)PURCHASEVALUE,SUM(PRETURNQTY) PRETURNQTY,SUM(PRETURNVALUE)PRETURNVALUE,SUM(NETPURCHASEQTY) NETPURCHASEQTY,
				SUM(NETPURCHASEVALUE) NETPURCHASEVALUE,SUM(PRODUCTION) PRODUCTION,SUM(PRODUCTIONVALUE)PRODUCTIONVALUE,SUM(TRANSFERIN)TRANSFERIN,ISNULL(SUM(TRANSFERINVALUE),0)TRANSFERINVALUE,
		-		SUM(STOCKIN) STOCKIN,SUM(STOCKINVALUE)STOCKINVALUE,SUM(SALESQTY) SALESQTY,SUM(SALESVALUE)SALESVALUE,SUM(SRETURNQTY) SRETURNQTY,SUM(SRETURNVALUE) SRETURNVALUE,
				SUM(NETSALESQTY) NETSALESQTY,SUM(NETSALESVALUE)NETSALESVALUE,SUM(CONSUMPTION) CONSUMPTION,SUM(CONSUMPTIONVALUE) CONSUMPTIONVALUE,
				SUM(TRANSFEROUT) TRANSFEROUT,
				SUM(TRANSFEROUTVALUE)TRANSFEROUTVALUE,
				 SUM(STOCKSETTLEMENTQTY) STOCKSETTLEMENTQTY,
				SUM(STOCKSETTLEMENTVALUE) STOCKSETTLEMENTVALUE,SUM(STOCKOUT) STOCKOUT,SUM(STOCKOUTVALUE)STOCKOUTVALUE,SUM(CLSQTY) CLSQTY,SUM(CLSVALUE)CLSVALUE 
			FROM #TREE where levelS= @lvl GROUP BY PARENT
				) B on A.MGCODE =B.PARENT
				SET @lvl = @lvl - 1;
				END
				
			SELECT * FROM 
			(
				SELECT A.ITEMS [ITEM NAME],A.MENUCODE [ITEM CODE],A.UNIT [UNIT],
				OPQTY, FORMAT(OP_RATE,'N2')OP_RATE, FORMAT(OPVALUE,'N2') OPVALUE,PURCHASEQTY, FORMAT(PURCHASEVALUE,'N2') PURCHASEVALUE,PRETURNQTY,FORMAT(PRETURNVALUE,'N2') PRETURNVALUE,NETPURCHASEQTY,FORMAT(NETPURCHASEVALUE,'N2') NETPURCHASEVALUE,
				PRODUCTION,FORMAT(PRODUCTIONVALUE,'N2') PRODUCTIONVALUE,TRANSFERIN,FORMAT(TRANSFERINVALUE,'N2') TRANSFERINVALUE,STOCKIN,FORMAT(STOCKINVALUE,'N2') STOCKINVALUE,
				SALESQTY,FORMAT(SALESVALUE,'N2')SALESVALUE,SRETURNQTY,FORMAT(SRETURNVALUE,'N2')SRETURNVALUE,NETSALESQTY,FORMAT(NETSALESVALUE,'N2')NETSALESVALUE,CONSUMPTION,FORMAT(CONSUMPTIONVALUE,'N2')CONSUMPTIONVALUE,
				TRANSFEROUT,FORMAT(TRANSFEROUTVALUE,'N2')TRANSFEROUTVALUE,STOCKOUT,STOCKSETTLEMENTQTY,FORMAT(STOCKSETTLEMENTVALUE,'N2') STOCKSETTLEMENTVALUE,FORMAT(STOCKOUTVALUE,'N2')STOCKOUTVALUE,
				CLSQTY,FORMAT(CLS_RATE,'N2') CLS_RATE,FORMAT(CLSVALUE,'N2')CLSVALUE,MCODE ,A.ITEMS	,A.[PATH],A.BATCH,SUPPLIER,CASE WHEN A.TYPE='G' THEN 'B' ELSE 'R' END FFLG FROM #TREE A
				WHERE (ISNULL(OPQTY,0)+ISNULL(PURCHASEQTY,0) +ISNULL(PRETURNQTY,0) +ISNULL(PRODUCTION,0)+ISNULL(STOCKIN,0)+ISNULL(TRANSFERIN,0)+ISNULL(SALESQTY,0)+ISNULL(SRETURNQTY,0)+ISNULL(CONSUMPTION,0)+ISNULL(TRANSFEROUT,0)+ISNULL(STOCKSETTLEMENTQTY,0)+ISNULL(STOCKOUT,0)) <> 0
			) A	ORDER BY  A.[PATH], A.ITEMS	
			SELECT 'TOTAL >>' [ITEM NAME],NULL,SUM(OPQTY)OPQTY, NULL OP_RATE, FORMAT(SUM(OPVALUE),'N2') OPVALUE,
			SUM(PURCHASEQTY)PURCHASEQTY, FORMAT(SUM(PURCHASEVALUE),'N2')PURCHASEVALUE,SUM(PRETURNQTY)PRETURNQTY,FORMAT(SUM(PRETURNVALUE),'N2')PRETURNVALUE,SUM(NETPURCHASEQTY)NETPURCHASEQTY,FORMAT(SUM(NETPURCHASEVALUE),'N2')NETPURCHASEVALUE,SUM(PRODUCTION)PRODUCTION,FORMAT(SUM(PRODUCTIONVALUE),'N2')PRODUCTIONVALUE,SUM(TRANSFERIN)TRANSFERIN,FORMAT(SUM(TRANSFERINVALUE),'N2')TRANSFERINVALUE,SUM(STOCKIN)STOCKIN,FORMAT(SUM(STOCKINVALUE),'N2')STOCKINVALUE,
			SUM(SALESQTY)SALESQTY,FORMAT(SUM(SALESVALUE),'N2')SALESVALUE,SUM(SRETURNQTY)SRETURNQTY,FORMAT(SUM(SRETURNVALUE),'N2')SRETURNVALUE,SUM(NETSALESQTY)NETSALESQTY,FORMAT(SUM(NETSALESVALUE),'N2')NETSALESVALUE,SUM(CONSUMPTION)CONSUMPTION,FORMAT(SUM(CONSUMPTIONVALUE),'N2')CONSUMPTIONVALUE,SUM(TRANSFEROUT)TRANSFEROUT,FORMAT(SUM(TRANSFEROUTVALUE),'N2')TRANSFEROUTVALUE,SUM(STOCKSETTLEMENTQTY) STOCKSETTLEMENTQTY, FORMAT(SUM(STOCKSETTLEMENTVALUE),'N2') STOCKSETTLEMENTVALUE,SUM(STOCKOUT)STOCKOUT,FORMAT(SUM(STOCKOUTVALUE),'N2')STOCKOUTVALUE,
			SUM(CLSQTY)CLSQTY,NULL CLS_RATE,FORMAT(SUM(CLSVALUE),'N2')CLSVALUE,NULL MCODE,'B' FFLG FROM @STKSUMMARY 

	
END
ELSE IF @REPORTTYPE = 2		-- CATEGORY WISE REPORT
BEGIN
	IF @ShowItemInGroupWiseReport = 0		-- ITEM GROUP WISE REPORT
		BEGIN
			SELECT ISNULL(A.MCAT,'N/A') MCATEGORY,SUM(OPQTY)OPQTY, FORMAT(SUM(OPVALUE),'N2') OPVALUE,
			SUM(PURCHASEQTY)PURCHASEQTY, FORMAT(SUM(PURCHASEVALUE),'N2')PURCHASEVALUE,SUM(PRETURNQTY)PRETURNQTY,FORMAT(SUM(PRETURNVALUE),'N2')PRETURNVALUE,SUM(NETPURCHASEQTY)NETPURCHASEQTY,FORMAT(SUM(NETPURCHASEVALUE),'N2')NETPURCHASEVALUE,SUM(PRODUCTION)PRODUCTION,FORMAT(SUM(PRODUCTIONVALUE),'N2')PRODUCTIONVALUE,SUM(TRANSFERIN)TRANSFERIN,FORMAT(SUM(TRANSFERINVALUE),'N2')TRANSFERINVALUE,SUM(STOCKIN)STOCKIN,FORMAT(SUM(STOCKINVALUE),'N2')STOCKINVALUE,
			SUM(SALESQTY)SALESQTY,FORMAT(SUM(SALESVALUE),'N2')SALESVALUE,SUM(SRETURNQTY)SRETURNQTY,FORMAT(SUM(SRETURNVALUE),'N2')SRETURNVALUE,SUM(NETSALESQTY)NETSALESQTY,FORMAT(SUM(NETSALESVALUE),'N2')NETSALESVALUE,SUM(CONSUMPTION)CONSUMPTION,FORMAT(SUM(CONSUMPTIONVALUE),'N2')CONSUMPTIONVALUE,SUM(TRANSFEROUT)TRANSFEROUT,FORMAT(SUM(TRANSFEROUTVALUE),'N2')TRANSFEROUTVALUE,SUM(STOCKSETTLEMENTQTY) STOCKSETTLEMENTQTY, FORMAT(SUM(STOCKSETTLEMENTVALUE),'N2') STOCKSETTLEMENTVALUE,SUM(STOCKOUT)STOCKOUT,FORMAT(SUM(STOCKOUTVALUE),'N2')STOCKOUTVALUE,
			SUM(CLSQTY)CLSQTY,FORMAT(SUM(CLSVALUE),'N2')CLSVALUE,ISNULL(A.MCAT,'N/A') MCAT,'R' FFLG FROM @STKSUMMARY A 
			GROUP BY ISNULL(A.MCAT,'N/A') ORDER BY ISNULL(A.MCAT,'N/A')

			SELECT 'TOTAL >>' MCATEGORY,SUM(OPQTY)OPQTY, FORMAT(SUM(OPVALUE),'N2') OPVALUE,
			SUM(PURCHASEQTY)PURCHASEQTY, FORMAT(SUM(PURCHASEVALUE),'N2')PURCHASEVALUE,SUM(PRETURNQTY)PRETURNQTY,FORMAT(SUM(PRETURNVALUE),'N2')PRETURNVALUE,SUM(NETPURCHASEQTY)NETPURCHASEQTY,FORMAT(SUM(NETPURCHASEVALUE),'N2')NETPURCHASEVALUE,SUM(PRODUCTION)PRODUCTION,FORMAT(SUM(PRODUCTIONVALUE),'N2')PRODUCTIONVALUE,SUM(TRANSFERIN)TRANSFERIN,FORMAT(SUM(TRANSFERINVALUE),'N2')TRANSFERINVALUE,SUM(STOCKIN)STOCKIN,FORMAT(SUM(STOCKINVALUE),'N2')STOCKINVALUE,
			SUM(SALESQTY)SALESQTY,FORMAT(SUM(SALESVALUE),'N2')SALESVALUE,SUM(SRETURNQTY)SRETURNQTY,FORMAT(SUM(SRETURNVALUE),'N2')SRETURNVALUE,SUM(NETSALESQTY)NETSALESQTY,FORMAT(SUM(NETSALESVALUE),'N2')NETSALESVALUE,SUM(CONSUMPTION)CONSUMPTION,FORMAT(SUM(CONSUMPTIONVALUE),'N2')CONSUMPTIONVALUE,SUM(TRANSFEROUT)TRANSFEROUT,FORMAT(SUM(TRANSFEROUTVALUE),'N2')TRANSFEROUTVALUE,SUM(STOCKSETTLEMENTQTY) STOCKSETTLEMENTQTY, FORMAT(SUM(STOCKSETTLEMENTVALUE),'N2') STOCKSETTLEMENTVALUE,SUM(STOCKOUT)STOCKOUT,FORMAT(SUM(STOCKOUTVALUE),'N2')STOCKOUTVALUE,
			SUM(CLSQTY)CLSQTY,FORMAT(SUM(CLSVALUE),'N2')CLSVALUE,NULL MCODE,'B' FFLG FROM @STKSUMMARY A
		END
	ELSE IF @ShowItemInGroupWiseReport = 1		-- SHOW ITEM IN CATEGORY WISE REPORT
		BEGIN
			SELECT A.*,B.[MAIN GROUP],B.[SUB GROUP_A], B.[SUB GROUP_B],B.[SUB GROUP_C],B.CATEGORY FROM 
			(
			SELECT DISTINCT MCAT CATEGORY,NULL DESCA,NULL UNIT,NULL OPQTY, NULL OP_RATE,NULL OPVALUE,
			NULL PURCHASEQTY,NULL PURCHASEVALUE,NULL PRETURNQTY,NULL PRETURNVALUE,NULL NETPURCHASEQTY,NULL NETPURCHASEVALUE,NULL PRODUCTION,NULL PRODUCTIONVALUE,NULL TRANSFERIN,NULL TRANSFERINVALUE,NULL STOCKIN,NULL STOCKINVALUE,
			NULL SALESQTY,NULL SALESVALUE,NULL SRETURNQTY,NULL SRETURNVALUE,NULL NETSALESQTY,NULL NETSALESVALUE,NULL CONSUMPTION,NULL CONSUMPTIONVALUE,NULL TRANSFEROUT,NULL TRANSFEROUTVALUE,NULL STOCKSETTLEMENTQTY,NULL STOCKSETTLEMENTVALUE,NULL STOCKOUT,NULL STOCKOUTVALUE,
			NULL CLSQTY,NULL CLS_RATE,NULL CLSVALUE,NULL MCODE,MCAT,'A' FLG,'B' FFLG,NULL BATCH,NULL SUPPLIER FROM @STKSUMMARY A
			UNION ALL	
			SELECT MENUCODE,DESCA,UNIT,OPQTY, FORMAT(CASE WHEN OPQTY = 0 THEN 0 ELSE OPVALUE/OPQTY END,'N2')OP_RATE, FORMAT(OPVALUE,'N2') OPVALUE,
			PURCHASEQTY, FORMAT(PURCHASEVALUE,'N2')PURCHASEVALUE,PRETURNQTY,FORMAT(PRETURNVALUE,'N2')PRETURNVALUE,NETPURCHASEQTY,FORMAT(NETPURCHASEVALUE,'N2')NETPURCHASEVALUE,PRODUCTION,FORMAT(PRODUCTIONVALUE,'N2')PRODUCTIONVALUE,TRANSFERIN,FORMAT(TRANSFERINVALUE,'N2')TRANSFERINVALUE,STOCKIN,FORMAT(STOCKINVALUE,'N2')STOCKINVALUE,
			SALESQTY,FORMAT(SALESVALUE,'N2')SALESVALUE,SRETURNQTY,FORMAT(SRETURNVALUE,'N2')SRETURNVALUE,NETSALESQTY,FORMAT(NETSALESVALUE,'N2')NETSALESVALUE,CONSUMPTION,FORMAT(CONSUMPTIONVALUE,'N2')CONSUMPTIONVALUE,TRANSFEROUT,FORMAT(TRANSFEROUTVALUE,'N2')TRANSFEROUTVALUE,STOCKSETTLEMENTQTY, FORMAT(STOCKSETTLEMENTVALUE,'N2'),STOCKOUT,FORMAT(STOCKOUTVALUE,'N2')STOCKOUTVALUE,
			CLSQTY,FORMAT(CASE WHEN CLSQTY = 0 THEN 0 ELSE CLSVALUE/CLSQTY END,'N2') CLS_RATE,FORMAT(CLSVALUE,'N2')CLSVALUE,MCODE,MCAT,'B' FLG,'R' FFLG,A.BATCH,A.SUPPLIER FROM @STKSUMMARY A
			UNION ALL
			SELECT DISTINCT NULL CATEGORY,NULL DESCA,NULL UNIT,NULL OPQTY, NULL OP_RATE,NULL OPVALUE,
			NULL PURCHASEQTY,NULL PURCHASEVALUE,NULL PRETURNQTY,NULL PRETURNVALUE,NULL NETPURCHASEQTY,NULL NETPURCHASEVALUE,NULL PRODUCTION,NULL PRODUCTIONVALUE,NULL TRANSFERIN,NULL TRANSFERINVALUE,NULL STOCKIN,NULL STOCKINVALUE,
			NULL SALESQTY,NULL SALESVALUE,NULL SRETURNQTY,NULL SRETURNVALUE,NULL NETSALESQTY,NULL NETSALESVALUE,NULL CONSUMPTION,NULL CONSUMPTIONVALUE,NULL TRANSFEROUT,NULL TRANSFEROUTVALUE,NULL STOCKSETTLEMENTQTY,NULL STOCKSETTLEMENTVALUE,NULL STOCKOUT,NULL STOCKOUTVALUE,
			NULL CLSQTY,NULL CLS_RATE,NULL CLSVALUE,NULL MCODE,MCAT,'C' FLG,'B' FFLG,NULL BATCH,NULL SUPPLIER FROM @STKSUMMARY A
			) A	LEFT JOIN #SGROUP B ON A.MCODE = B.MC ORDER BY MCAT,FLG,DESCA

			SELECT 'TOTAL >>' MCATEGORY,SUM(OPQTY)OPQTY, FORMAT(SUM(OPVALUE),'N2') OPVALUE,
			SUM(PURCHASEQTY)PURCHASEQTY, FORMAT(SUM(PURCHASEVALUE),'N2')PURCHASEVALUE,SUM(PRETURNQTY)PRETURNQTY,FORMAT(SUM(PRETURNVALUE),'N2')PRETURNVALUE,SUM(NETPURCHASEQTY)NETPURCHASEQTY,FORMAT(SUM(NETPURCHASEVALUE),'N2')NETPURCHASEVALUE,SUM(PRODUCTION)PRODUCTION,FORMAT(SUM(PRODUCTIONVALUE),'N2')PRODUCTIONVALUE,SUM(TRANSFERIN)TRANSFERIN,FORMAT(SUM(TRANSFERINVALUE),'N2')TRANSFERINVALUE,SUM(STOCKIN)STOCKIN,FORMAT(SUM(STOCKINVALUE),'N2')STOCKINVALUE,
			SUM(SALESQTY)SALESQTY,FORMAT(SUM(SALESVALUE),'N2')SALESVALUE,SUM(SRETURNQTY)SRETURNQTY,FORMAT(SUM(SRETURNVALUE),'N2')SRETURNVALUE,SUM(NETSALESQTY)NETSALESQTY,FORMAT(SUM(NETSALESVALUE),'N2')NETSALESVALUE,SUM(CONSUMPTION)CONSUMPTION,FORMAT(SUM(CONSUMPTIONVALUE),'N2')CONSUMPTIONVALUE,SUM(TRANSFEROUT)TRANSFEROUT,FORMAT(SUM(TRANSFEROUTVALUE),'N2')TRANSFEROUTVALUE,SUM(STOCKSETTLEMENTQTY) STOCKSETTLEMENTQTY, FORMAT(SUM(STOCKSETTLEMENTVALUE),'N2') STOCKSETTLEMENTVALUE,SUM(STOCKOUT)STOCKOUT,FORMAT(SUM(STOCKOUTVALUE),'N2')STOCKOUTVALUE,
			SUM(CLSQTY)CLSQTY,FORMAT(SUM(CLSVALUE),'N2')CLSVALUE,NULL MCODE,'B' FFLG FROM @STKSUMMARY A
		END
END

IF OBJECT_ID('TEMPDB..#TREE') IS NOT NULL DROP TABLE #TREE
--IF OBJECT_ID('TEMPDB..#STKSUMMARY') is not null drop table #STKSUMMARY
IF OBJECT_ID('TEMPDB..#WHOUSE') is not null drop table #WHOUSE

set nocount OFF